{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joepf\\\\Documents\\\\git\\\\Individual-project-gfb-website\\\\src\\\\components\\\\User\\\\UserItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserItem = props => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\");\n    };\n  }, []);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = event => {\n    if (event.key === \"Enter\") {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\"\n  };\n  const {\n    completed,\n    id,\n    title\n  } = props.todo;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: handleEditing,\n      style: viewMode,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: styles.checkbox,\n        checked: completed,\n        onChange: () => props.handleChangeProps(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteTodoProps(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: completed ? completedStyle : null,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: editMode,\n      className: styles.textInput,\n      value: title,\n      onChange: e => {\n        props.setUpdate(e.target.value, id);\n      },\n      onKeyDown: handleUpdatedDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserItem, \"4da9QhRSPGznlVTnx8cpe7ty4OM=\");\n\n_c = UserItem;\nexport default UserItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"sources":["C:/Users/joepf/Documents/git/Individual-project-gfb-website/src/components/User/UserItem.js"],"names":["React","useState","useEffect","UserItem","props","editing","setEditing","console","log","handleEditing","handleUpdatedDone","event","key","completedStyle","fontStyle","color","opacity","textDecoration","completed","id","title","todo","viewMode","editMode","display","styles","item","checkbox","handleChangeProps","deleteTodoProps","textInput","e","setUpdate","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXK,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1BH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMI,iBAAiB,GAAGC,KAAK,IAAI;AACjC,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAJD;;AAMA,QAAMO,cAAc,GAAG;AACrBC,IAAAA,SAAS,EAAE,QADU;AAErBC,IAAAA,KAAK,EAAE,SAFc;AAGrBC,IAAAA,OAAO,EAAE,GAHY;AAIrBC,IAAAA,cAAc,EAAE;AAJK,GAAvB;AAOA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,EAAb;AAAiBC,IAAAA;AAAjB,MAA2BhB,KAAK,CAACiB,IAAvC;AAEA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAIlB,OAAJ,EAAa;AACXiB,IAAAA,QAAQ,CAACE,OAAT,GAAmB,MAAnB;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,CAACC,OAAT,GAAmB,MAAnB;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEC,MAAM,CAACC,IAAtB;AAAA,4BACE;AAAK,MAAA,aAAa,EAAEjB,aAApB;AAAmC,MAAA,KAAK,EAAEa,QAA1C;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAEG,MAAM,CAACE,QAFpB;AAGE,QAAA,OAAO,EAAET,SAHX;AAIE,QAAA,QAAQ,EAAE,MAAMd,KAAK,CAACwB,iBAAN,CAAwBT,EAAxB;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMf,KAAK,CAACyB,eAAN,CAAsBV,EAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAM,QAAA,KAAK,EAAED,SAAS,GAAGL,cAAH,GAAoB,IAA1C;AAAA,kBAAiDO;AAAjD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEG,QAFT;AAGE,MAAA,SAAS,EAAEE,MAAM,CAACK,SAHpB;AAIE,MAAA,KAAK,EAAEV,KAJT;AAKE,MAAA,QAAQ,EAAEW,CAAC,IAAI;AACb3B,QAAAA,KAAK,CAAC4B,SAAN,CAAgBD,CAAC,CAACE,MAAF,CAASC,KAAzB,EAAgCf,EAAhC;AACD,OAPH;AAQE,MAAA,SAAS,EAAET;AARb;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA7DD;;GAAMP,Q;;KAAAA,Q;AA+DN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\nconst UserItem = props => {\r\n  const [editing, setEditing] = useState(false)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"Cleaning up...\")\r\n    }\r\n  }, [])\r\n\r\n  const handleEditing = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false)\r\n    }\r\n  }\r\n\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n\r\n  const { completed, id, title } = props.todo\r\n\r\n  let viewMode = {}\r\n  let editMode = {}\r\n\r\n  if (editing) {\r\n    viewMode.display = \"none\"\r\n  } else {\r\n    editMode.display = \"none\"\r\n  }\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      <div onDoubleClick={handleEditing} style={viewMode}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className={styles.checkbox}\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n        <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        style={editMode}\r\n        className={styles.textInput}\r\n        value={title}\r\n        onChange={e => {\r\n          props.setUpdate(e.target.value, id)\r\n        }}\r\n        onKeyDown={handleUpdatedDone}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default UserItem"]},"metadata":{},"sourceType":"module"}