{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joepf\\\\Documents\\\\git\\\\Individual-project-gfb-website\\\\src\\\\components\\\\User\\\\UserItem.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./TodoItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserItem = props => {\n  //const [editing, setEditing] = useState(false)\n\n  /*useEffect(() => {\r\n    return () => {\r\n      console.log(\"Cleaning up...\")\r\n    }\r\n  }, [])\r\n    const handleEditing = () => {\r\n    setEditing(true)\r\n  }\r\n    const handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false)\r\n    }\r\n  }\r\n    const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n    const { completed, id, title } = props.todo\r\n    let viewMode = {}\r\n  let editMode = {}\r\n    if (editing) {\r\n    viewMode.display = \"none\"\r\n  } else {\r\n    editMode.display = \"none\"\r\n  }*/\n  return (\n    /*#__PURE__*/\n\n    /*<li className={styles.item}>\r\n      <div onDoubleClick={handleEditing} style={viewMode}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className={styles.checkbox}\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n        <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        style={editMode}\r\n        className={styles.textInput}\r\n        value={title}\r\n        onChange={e => {\r\n          props.setUpdate(e.target.value, id)\r\n        }}\r\n        onKeyDown={handleUpdatedDone}\r\n      />\r\n    </li>*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"I AM GROUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = UserItem;\nexport default UserItem;\nconst groups = [{\n  id: 1\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"sources":["C:/Users/joepf/Documents/git/Individual-project-gfb-website/src/components/User/UserItem.js"],"names":["React","useState","useEffect","styles","UserItem","props","groups","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQE;AAAA;;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAvBF;AA2BD,CAhED;;KAAMD,Q;AAkEN,eAAeA,QAAf;AAEA,MAAME,MAAM,GAAG,CACb;AAACC,EAAAA,EAAE,EAAC;AAAJ,CADa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\n\r\nconst UserItem = props => {\r\n  //const [editing, setEditing] = useState(false)\r\n\r\n  /*useEffect(() => {\r\n    return () => {\r\n      console.log(\"Cleaning up...\")\r\n    }\r\n  }, [])\r\n\r\n  const handleEditing = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false)\r\n    }\r\n  }\r\n\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n\r\n  const { completed, id, title } = props.todo\r\n\r\n  let viewMode = {}\r\n  let editMode = {}\r\n\r\n  if (editing) {\r\n    viewMode.display = \"none\"\r\n  } else {\r\n    editMode.display = \"none\"\r\n  }*/\r\n\r\n  return (\r\n    /*<li className={styles.item}>\r\n      <div onDoubleClick={handleEditing} style={viewMode}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className={styles.checkbox}\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n        <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        style={editMode}\r\n        className={styles.textInput}\r\n        value={title}\r\n        onChange={e => {\r\n          props.setUpdate(e.target.value, id)\r\n        }}\r\n        onKeyDown={handleUpdatedDone}\r\n      />\r\n    </li>*/\r\n    <div>\r\n      <h1>I AM GROUP</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserItem\r\n\r\nconst groups = [\r\n  {id:1,}\r\n]"]},"metadata":{},"sourceType":"module"}