[{"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\index.js":"1","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\reportWebVitals.js":"2","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\App.js":"3","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserContainer.js":"4","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupContainer.js":"5","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupDetails.js":"6","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\AdminContainer.js":"7","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupSearchBar.js":"8","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\PageNotFound.js":"9","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\User\\Login.js":"10","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Container.js":"11","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Searchbar.js":"12","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Navbar.js":"13","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\trash\\SideNavbar.js":"14","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostList.js":"15","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostItem.js":"16","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\UseAxios.js":"17","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Contact.js":"18","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostDetails.js":"19","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\Chat.js":"20","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatOptions.js":"21","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatMessages.js":"22","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Dropdown\\Dropdown.js":"23","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Dropdown\\DropdownItem.js":"24","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\User\\Register.js":"25","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\EditorContainer.js":"26","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\PostCreate.js":"27","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\PostContainer.js":"28","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\List\\PostList.js":"29","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\List\\PostItem.js":"30","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupSave.js":"31","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\List\\GroupList.js":"32","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\List\\GroupItem.js":"33","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\List\\UserList.js":"34","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserSave.js":"35","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\List\\UserItem.js":"36","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserDetails.js":"37","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Admin\\AdminOptions.js":"38","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Admin\\AdminStatistics.js":"39","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostContainer.js":"40","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Speltakken\\SpeltakContainer.js":"41","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Speltakken\\Speltak.js":"42"},{"size":540,"mtime":1634042203341,"results":"43","hashOfConfig":"44"},{"size":375,"mtime":1633439367219,"results":"45","hashOfConfig":"44"},{"size":2090,"mtime":1639670820148,"results":"46","hashOfConfig":"44"},{"size":743,"mtime":1641418305483,"results":"47","hashOfConfig":"44"},{"size":2628,"mtime":1640963697627,"results":"48","hashOfConfig":"44"},{"size":921,"mtime":1641392754310,"results":"49","hashOfConfig":"44"},{"size":1783,"mtime":1641996934312,"results":"50","hashOfConfig":"44"},{"size":435,"mtime":1637766455274,"results":"51","hashOfConfig":"44"},{"size":402,"mtime":1637693617953,"results":"52","hashOfConfig":"44"},{"size":6112,"mtime":1639685317123,"results":"53","hashOfConfig":"44"},{"size":1849,"mtime":1641560755235,"results":"54","hashOfConfig":"44"},{"size":728,"mtime":1638883231333,"results":"55","hashOfConfig":"44"},{"size":8110,"mtime":1641560392347,"results":"56","hashOfConfig":"44"},{"size":2997,"mtime":1638392287345,"results":"57","hashOfConfig":"44"},{"size":405,"mtime":1640005260259,"results":"58","hashOfConfig":"44"},{"size":2807,"mtime":1639571493516,"results":"59","hashOfConfig":"44"},{"size":992,"mtime":1639092451449,"results":"60","hashOfConfig":"44"},{"size":530,"mtime":1639670923452,"results":"61","hashOfConfig":"44"},{"size":3340,"mtime":1642073344298,"results":"62","hashOfConfig":"44"},{"size":4234,"mtime":1639350442210,"results":"63","hashOfConfig":"44"},{"size":4490,"mtime":1639257241737,"results":"64","hashOfConfig":"44"},{"size":4660,"mtime":1639917142232,"results":"65","hashOfConfig":"44"},{"size":363,"mtime":1639503106948,"results":"66","hashOfConfig":"44"},{"size":1454,"mtime":1639669716239,"results":"67","hashOfConfig":"44"},{"size":6523,"mtime":1641998009803,"results":"68","hashOfConfig":"44"},{"size":1129,"mtime":1641996767943,"results":"69","hashOfConfig":"44"},{"size":12882,"mtime":1642004010741,"results":"70","hashOfConfig":"44"},{"size":434,"mtime":1641999916822,"results":"71","hashOfConfig":"44"},{"size":910,"mtime":1640722902934,"results":"72","hashOfConfig":"44"},{"size":2942,"mtime":1642165163258,"results":"73","hashOfConfig":"44"},{"size":4067,"mtime":1642169594116,"results":"74","hashOfConfig":"44"},{"size":755,"mtime":1640956028721,"results":"75","hashOfConfig":"44"},{"size":4395,"mtime":1641392646967,"results":"76","hashOfConfig":"44"},{"size":736,"mtime":1641415459378,"results":"77","hashOfConfig":"44"},{"size":7062,"mtime":1642169386015,"results":"78","hashOfConfig":"44"},{"size":6123,"mtime":1641488562268,"results":"79","hashOfConfig":"44"},{"size":871,"mtime":1641475513247,"results":"80","hashOfConfig":"44"},{"size":833,"mtime":1641476228119,"results":"81","hashOfConfig":"44"},{"size":1086,"mtime":1641484472192,"results":"82","hashOfConfig":"44"},{"size":1306,"mtime":1641559858361,"results":"83","hashOfConfig":"44"},{"size":966,"mtime":1641561522603,"results":"84","hashOfConfig":"44"},{"size":1902,"mtime":1641563438847,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"e0q5fz",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"88"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"88"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"88"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"88"},"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\index.js",[],["201","202"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\reportWebVitals.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\App.js",["203"],"import Login from './User/Login.js';\r\nimport Navbar from './Nav/Navbar.js'\r\nimport Container from './Container';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport React, { useState, useEffect} from 'react';\r\nimport \"./../../css/general.css\"\r\nimport axios from 'axios';\r\n\r\n//https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\nconst App = ()=> {\r\n    //const[isShowed,setShow] = useState(true)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async (params) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.request(params);\r\n      setResponse(res.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n \r\n  const toggleLogin = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData({\r\n      method: 'get',\r\n      url: ('/post/getall/null'),\r\n    });\r\n  }, []);\r\n\r\n const filter=(filter)=>{\r\n   if(filter.trim() === \"\")\r\n   {\r\n    filter = \"null\"\r\n   }\r\n   else if(filter !== null)\r\n   {\r\n      filter = filter\r\n   }\r\n   else{\r\n      filter = \"null\"\r\n   }\r\n\r\n\r\n   fetchData({\r\n    method: 'get',\r\n    url: ('/post/getall/'+ filter),\r\n  });\r\n}\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {isOpen && \r\n          <Login\r\n            handleClose={toggleLogin}\r\n          />\r\n        }\r\n      \r\n        <Navbar\r\n          toggleLogin={toggleLogin}\r\n          filter={filter}\r\n        />\r\n        <Container \r\n          response={response}\r\n          error={error}\r\n          loading={loading}\r\n        />\r\n        {/* <div className=\"body\">\r\n          {sideNavbar()}\r\n          <div className=\"body_child\" className=\"body_child_main\">\r\n            <ContentContainer/>\r\n          </div>         \r\n        </div> */}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserContainer.js",["204","205","206"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\"\r\n// import GroupList from \"./GroupList\"\r\n// import GroupSearchBar from \"./GroupSearchBar\"\r\n// import GroupDetails from \"./GroupDetails\";\r\n// import PageNotFound from \"../../General/PageNotFound\";\r\nimport UserList from \"./List/UserList\"\r\nimport UserSave from \"./UserSave\"\r\nimport \"./userAdmin.css\"\r\n\r\n\r\n\r\nconst UserContainer = (props) => { \r\n  return(\r\n    <div className=\"admin-user-container\">\r\n      <div className=\"admin-user-box\">\r\n        <div className=\"admin-user-save\">\r\n          <UserSave/>\r\n        </div>\r\n        <div className=\"admin-user-list\">\r\n          <UserList/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserContainer","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupContainer.js",["207","208","209"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\"\r\n// import GroupList from \"./GroupList\"\r\n// import GroupSearchBar from \"./GroupSearchBar\"\r\n// import GroupDetails from \"./GroupDetails\";\r\n// import PageNotFound from \"../../General/PageNotFound\";\r\nimport GroupList from \"./List/GroupList\"\r\nimport GroupSave from \"./GroupSave\"\r\nimport \"./groupAdmin.css\"\r\n\r\n\r\n\r\nconst GroupContainer = (props) => { \r\n  // const baseURL = process.env.REACT_APP_GROUP;\r\n\r\n  // const [groups,setGroup] = useState(null);\r\n  // const [group,setGroupId] = useState(null);\r\n\r\n  // useEffect(() => \r\n  // {\r\n  // console.log(baseURL)\r\n  // setGroups(baseURL);\r\n  // }, []);\r\n\r\n  // const setGroups = url =>\r\n  // {\r\n  // axios.get(url).then((response) => \r\n  // {\r\n  // setGroup(response.data);\r\n  // }).catch(error => console.log(error));\r\n\r\n\r\n  // }\r\n\r\n  // const useFilter = filter =>\r\n  // {\r\n  // if(filter.trim() != \"\")\r\n  // {\r\n  // setGroups(baseURL +\"?filter=\"+ filter);\r\n  // console.log(filter);\r\n  // }\r\n  // else\r\n  // {\r\n  // setGroups(baseURL)\r\n  // }\r\n  // }\r\n\r\n  // const getGroupDetails = (id) =>\r\n  // {\r\n  // axios.get(baseURL+\"/\"+id).then((response) => \r\n  // {\r\n  // setGroupId(response.data);\r\n  // });\r\n  // }\r\n\r\n  // //safe guard?? will be done like this but better in the furte\r\n  // if (groups == null) {\r\n\r\n  // return (\r\n  // <div className=\"main\">{props.noConnection()}</div>\r\n\r\n  // )\r\n  // };\r\n\r\n  // return (\r\n  // <div className=\"group_container\">\r\n  //   <div className=\"group_info_bar\">\r\n  //     <div className=\"group_info\">\r\n  //       <div className=\"group_name\">\r\n  //         <h1>group editor</h1>\r\n  //       </div>\r\n\r\n  //       <div className=\"group_description\">\r\n  //         <a>Here you can see, edit and create groups. Click a group to get the details.</a>\r\n  //       </div>\r\n  //     </div>\r\n  //     <div className=\"group_button\">\r\n  //       <div className=\"group_create_button\">\r\n  //           <a>create group</a>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n\r\n\r\n  //   <GroupSearchBar useFilter={useFilter}/>\r\n  //   <GroupList\r\n  //       groups={groups}\r\n  //       getGroupDetails={getGroupDetails}\r\n  //   />\r\n\r\n  //   <GroupDetails \r\n  //       group = {group}\r\n  //   />\r\n  // </div>\r\n  // )\r\n  // if(window.location.pathname )\r\n  return(\r\n    <div className=\"admin-group-container\">\r\n      <div className=\"admin-group-box\">\r\n        <div className=\"admin-group-save\">\r\n          <GroupSave/>\r\n        </div>\r\n        <div className=\"admin-group-list\">\r\n          <GroupList/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupContainer","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupDetails.js",["210","211","212","213","214","215"],"import React from \"react\"\r\nimport useAxios from \"../../General/UseAxios\";\r\n\r\nconst GroupDetails = () => {\r\n\r\n    var id = window.location.pathname.replace(\"/admin/groups/\",\"\")\r\n\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n      method: 'get',\r\n      url: '/group/'+ id,\r\n      headers: \r\n      {\r\n          Authorization: sessionStorage.getItem(\"token\"),\r\n      },\r\n    }); \r\n\r\n  if(response !== null)\r\n  {\r\n    return (\r\n      <div class=\"admin-group-details\">\r\n          <img src={response.pictureUrl} className=\"admin-group-details-img\"></img>\r\n          <a>name:{response.name}</a>\r\n          <a>category:{response.category}</a>   \r\n          <a>active:{response.active.toString()}</a>\r\n      </div>\r\n    )\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <div class=\"admin-group-details\">\r\n          error\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default GroupDetails","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\AdminContainer.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupSearchBar.js",[],["216","217"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\PageNotFound.js",["218","219"],"import './../../css/pageNotFound.css'\r\n\r\n\r\nfunction pageNotFound(props) {\r\n\r\n  \r\n  if(props.code != null)\r\n  {\r\n    return(\r\n      <div className=\"main\">\r\n      <h1>error {props.code}</h1>\r\n      <a>{props.message}</a>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>error 404</h1>\r\n      <a>page doesn't exsists yet</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default pageNotFound;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\User\\Login.js",["220","221","222"],"import React, { useState} from 'react';\r\nimport axios from 'axios';\r\nimport './../../../css/General/login.css'\r\nimport {Router, useHistory } from \"react-router-dom\"\r\n// import { Redirect } from 'react-router';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\nconst Login = props => \r\n{\r\n    const [userCredentials,setCredentials] = useState({\r\n        email :\"\",\r\n        password : \"\"\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // const [count, setCount] = useState(3);\r\n\r\n    const errorStyle = {\r\n        color:\"red\"\r\n    } \r\n\r\n    const fetchData = async (params) => {\r\n        setLoading(true);\r\n        try {\r\n        const res = await axios.post(\"/login\",params);\r\n        setResponse(res.data);\r\n        setError(null);\r\n        } catch (err) {\r\n        setError(err);\r\n        } finally {\r\n            \r\n        setLoading(false);\r\n        }\r\n    };\r\n\r\n    \r\n    const axiosDataResponse = () =>{\r\n        if(response === null && error === null && loading ===false)\r\n        {\r\n            return (\r\n                <br/>\r\n                );\r\n        }\r\n        var feedback = \"\";\r\n        if(error !== null)\r\n        {\r\n            feedback = \"Log in failed\"\r\n        }\r\n        else if(loading)\r\n        {\r\n            feedback = \"Loading...\"\r\n        }\r\n        else if(response !== null)\r\n        {\r\n            // countdown();\r\n            feedback = \"log in successful. \"//\"closing in: \" + count\r\n            setUserData()\r\n        }\r\n\r\n        return(\r\n            <div className=\"feedback\">\r\n                <a>{feedback}</a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const setUserData = () =>{\r\n        console.log(response)\r\n        sessionStorage.setItem(\"token\",response.Authorization)\r\n        sessionStorage.setItem(\"name\",response.name)\r\n        sessionStorage.setItem(\"userId\",response.userId)\r\n        sessionStorage.setItem(\"role\",response.role)\r\n        sessionStorage.setItem(\"groups\",JSON.stringify(response.groups))\r\n        countdown();\r\n    }\r\n\r\n    function Login(event){\r\n        event.preventDefault();\r\n        // console.log(userCredentials.email + \" \"+\r\n        //     userCredentials.password)\r\n        if(userCredentials.password === \"\" && userCredentials.password === \"\")\r\n        {\r\n          setEmailError(\"*Enter your E-mail addres\")\r\n          setPasswordError(\"*Enter your Password\")\r\n        }\r\n        else if(userCredentials.email === \"\")\r\n        {\r\n            setEmailError(\"*Enter your E-mail addres\")\r\n        }\r\n        else if(userCredentials.password === \"\")\r\n        {\r\n            setPasswordError(\"*Enter your Password\")\r\n        }\r\n        \r\n        else{\r\n            var params = {\r\n                email:userCredentials.email,\r\n                password:userCredentials.password,\r\n            }\r\n            \r\n            setResponse(null)\r\n            setError(null)\r\n            setLoading(null)\r\n            fetchData(params);\r\n        }\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n\r\n    async function countdown(){\r\n        // for (let i = 3; i > 0; i--) {\r\n        //     setCount(i)\r\n        //     await sleep(3000);\r\n        //     console.log(\"test\")\r\n        // }\r\n        // props.handleClose()\r\n        await sleep(500);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    function Register(event){\r\n        event.preventDefault();\r\n        history.push(\"/register\");\r\n        props.handleClose()\r\n    }\r\n\r\n    const onChange = e => {\r\n        setCredentials({\r\n          ...userCredentials,\r\n          [e.target.name]: e.target.value,\r\n        })\r\n      }\r\n\r\n    const empty = e =>{\r\n        e.stopPropagation();\r\n    }\r\n\r\n  return (\r\n    <div className=\"popup-login\" onClick={props.handleClose}>\r\n      <div className=\"box\" onClick={empty}>\r\n        <div className=\"close-icon\" onClick={props.handleClose}>x</div>\r\n        <div className=\"top\">\r\n            <h1 className=\"Login-h1\">Log in</h1>\r\n            <a className=\"Login-information\">Log in using your email or register by clicking the register button</a><br/>\r\n        </div>\r\n        <div className=\"forms\">\r\n            <form onSubmit={Login} className=\"login-form\">\r\n                <label htmlFor=\"email\" className=\"login-label\">E-mail address:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"email\" \r\n                    className=\"login-text\" \r\n                    value={userCredentials.email}\r\n                    name=\"email\" \r\n                    placeholder=\"E-mail..\"\r\n                    onChange={onChange}\r\n                />\r\n                <p className=\"error-login\">{emailError}</p><br/>\r\n                <label htmlFor=\"password\" className=\"login-label\">Password:</label>\r\n                <input \r\n                    type=\"password\" \r\n                    id=\"password\" \r\n                    className=\"login-text\" \r\n                    value={userCredentials.password}\r\n                    name=\"password\" \r\n                    placeholder=\"Password..\"\r\n                    onChange={onChange}\r\n                />\r\n                <p className=\"error-login\">{passwordError}</p>\r\n                <div className=\"axios-response\" style={error !=null ? errorStyle : null}>\r\n                    {axiosDataResponse()}\r\n                </div>\r\n                    \r\n                <div className=\"submit\">\r\n                    <input type=\"submit\"className=\"login-submit\" value=\"Login\"/>\r\n                </div>\r\n            </form> \r\n            <form onSubmit={Register} className=\"register-form\">\r\n                <div className=\"submit\">\r\n                    <input type=\"submit\" className=\"register-submit\"  value=\"Register\"/>\r\n                </div>\r\n            </form> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default Login;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Container.js",["223","224"],"import React, {useState} from \"react\"\r\nimport { Route, Switch } from 'react-router';\r\nimport PostContainer from './Home/PostContainer';\r\nimport Error404 from './PageNotFound';\r\nimport AdminContainer from \"../Admin/AdminContainer\";\r\nimport EditorContainer from \"../Editor/EditorContainer\";\r\nimport Login from \"./User/Login\";\r\nimport Register from \"./User/Register\";\r\nimport PostDetails from \"./../General/Home/PostDetails\";\r\nimport Chat from \"./Contact/Chat/Chat\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport SpeltakContainer from \"./Speltakken/SpeltakContainer\";\r\nimport \"./../../css/container.css\"\r\n\r\nconst Container = (props) => {\r\n\r\n    const [userData, setUserData] = useState(null);///////////////////////NEEDS TO BE DONE\r\n\r\n  return (\r\n    <div className=\"content_container\">\r\n        <Switch>\r\n          <Route path = \"/admin*\">\r\n            <AdminContainer url=\"/admin\"/>\r\n          </Route>\r\n          <Route path = \"/editor*\">\r\n            <EditorContainer url=\"/editor\"/>\r\n          </Route>\r\n          <Route path = \"/speltak*\">\r\n            <SpeltakContainer url=\"/speltak\"/>\r\n          </Route>\r\n          <Route exact path = \"/posts-details/*\" component={PostDetails}/>\r\n          <Route exact path = \"/login\" component={Login}/>\r\n          <Route exact path = \"/register\" component={Register}/>\r\n          <Route exact path = \"/account\" component={Login}/>\r\n          <Route exact path = \"/contact\" component={Contact}/>\r\n          <Route exact path = \"/contact/chat\" component={Chat}/>\r\n          <Route exact path = \"/\">\r\n            <PostContainer\r\n              response={props.response}\r\n              error={props.error}\r\n              loading={props.loading}\r\n            />\r\n          </Route>\r\n          <Route exact path = \"/*\" component={Error404}/>\r\n        </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Searchbar.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Navbar.js",["225","226","227","228"],"import React, {useState} from 'react';\r\nimport './../../../css/General/navbar.css'\r\nimport logo from \"./../../../media/logo.svg\"\r\nimport Searchbar from \"./Searchbar\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {useHistory } from \"react-router-dom\"\r\nimport accountIcon from \"./../../../media/account-icon.png\"\r\nimport Dropdown from './Dropdown/Dropdown';\r\nimport useAxios from '../UseAxios';\r\n\r\nconst Navbar = props => \r\n{\r\n    const [userName, setUserName] = useState(fetchUser());\r\n    const history = useHistory();\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/group/speltak/category',\r\n    }); \r\n\r\n    const groups = () =>{\r\n        const groups = []\r\n        response.forEach(element => {\r\n            groups.push((\r\n                {\r\n                    id:element.id,\r\n                    title:element.name,\r\n                    route:\"/speltak/\" + element.name\r\n                }\r\n            ))\r\n        })\r\n        return groups\r\n    }\r\n\r\n    \r\n\r\n    function fetchUser(){\r\n        let username = sessionStorage.getItem(\"name\")\r\n        if(sessionStorage.getItem(\"token\") !== null && username !== null)\r\n        {\r\n            return username\r\n        }\r\n        return null\r\n        \r\n    }\r\n\r\n    async function logOut(){\r\n        sessionStorage.clear()\r\n        history.push(\"\");\r\n        window.location.reload(false);\r\n    }\r\n    \r\n    const redirect = (link) =>  {\r\n        history.push(link); \r\n    }\r\n\r\n    const dropdownMenu = () =>{\r\n        if(response !== null)\r\n        {\r\n            //in the furute this will be fecthed from the backend\r\n            const navItems = \r\n            [\r\n                {\r\n                    id: uuidv4(),\r\n                    title:\"Home\",\r\n                    route:\"/\",\r\n                    subPages:\r\n                    [\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"agenda\",\r\n                            route:\"/agenda\",\r\n                        },\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"membership\",\r\n                            route:\"/member\",\r\n                        },\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"internship\",\r\n                            route:\"/intern\",\r\n                        },\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"scoutfit\",\r\n                            route:\"/scoutfit\",\r\n                        },\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"social security\",\r\n                            route:\"/sc\",\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title:\"Groupbranches\",\r\n                    route:\"/speltak\",\r\n                    subPages: groups()\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title:\"Picturebook\",\r\n                    route:\"/fotoboek\",\r\n                    subPages:\r\n                    [\r\n                        {//you can select a year but it is nowhere near implemented yet it will be fetched from the api\r\n                            id: uuidv4(),\r\n                            title:\"2016\",\r\n                            route:\"/fotoboek/2016\",\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title:\"contact\",\r\n                    route:\"/contact\",\r\n                    subPages:\r\n                    [\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"chat\",\r\n                            route:\"/contact/chat\",\r\n                        }\r\n                    ]\r\n                },\r\n                {//in the furute this will be an api call and I will just feed you back to what you have premmision to  so this wont show as well as the admin section\r\n                    id: uuidv4(),\r\n                    title:\"editor\",\r\n                    route:\"/editor\",\r\n                    subPages:\r\n                    [\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"post\",\r\n                            route:\"/editor/post\",\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title:\"admin\",\r\n                    route:\"/admin\",\r\n                    subPages:\r\n                    [\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"groups\",\r\n                            route:\"/admin/groups\",\r\n                        },\r\n                        {\r\n                            id: uuidv4(),\r\n                            title:\"users\",\r\n                            route:\"/admin/users\",\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n\r\n            return(\r\n                <Dropdown\r\n                    navItems={navItems}\r\n                />\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <a>error</a>\r\n            )\r\n        }\r\n    }\r\n\r\n    function slideshowLinks(){\r\n        if(userName !== null)\r\n        {\r\n            return(\r\n            <div className=\"navbar-slideshow-container\">\r\n                <div className=\"navbar-slideshow-link\" onClick={() => redirect(\"\")}>\r\n                    <h2 className='navbar-slideshow-link-text'>Home</h2>\r\n                </div>\r\n                <div className=\"navbar-slideshow-link\" onClick={() => redirect(\"/member\")}>\r\n                    <h2 className='navbar-slideshow-link-text'>Become a member</h2>\r\n                </div>\r\n                <div className=\"navbar-slideshow-link\" onClick={logOut}>\r\n                    <h2 className='navbar-slideshow-link-text'>Log out</h2>\r\n                </div>\r\n                <div className=\"navbar-slideshow-link navbar-slideshow-link-icon\" onClick={()=>redirect('/account')}>\r\n                    <img src={accountIcon} alt=\"account\" class=\"navbar-slideshow-link-user-icon\"/>\r\n                    <h2 className='navbar-slideshow-link-text'>{userName}</h2> \r\n                </div>\r\n            </div>             \r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n            <div className=\"navbar-slideshow-container\">\r\n                <div className=\"navbar-slideshow-link\" onClick={() => redirect(\"\")}>\r\n                    <h2 className='navbar-slideshow-link-text'>Home</h2>\r\n                </div>\r\n                <div className=\"navbar-slideshow-link\" onClick={() => redirect(\"/member\")}>\r\n                    <h2 className='navbar-slideshow-link-text'>Become a member</h2>\r\n                </div>\r\n                <div className=\"navbar-slideshow-link\">\r\n                    <h2  className='navbar-slideshow-link-text' onClick={props.toggleLogin}>Log in/Register</h2>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n    //todo fix the slideshow\r\n    return (\r\n        <nav class=\"navbar\">\r\n            <div className=\"navbar-slideshow\">\r\n                <div className=\"navbar-slideshow-overlay\">\r\n                    <div className=\"navbar-slideshow-logo-container\" onClick={() => redirect(\"\")}>\r\n                        <img src={logo} alt=\"logo\" class=\"navbar-slideshow-logo\"/>\r\n                    </div>\r\n                   {slideshowLinks()}\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-navigation-container\">\r\n                <div className=\"navbar-navigation\">\r\n                    {dropdownMenu()}\r\n                </div>\r\n                <div className=\"navbar-navigation-searchbar\">\r\n                    <Searchbar filter={props.filter}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\trash\\SideNavbar.js",["229"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostList.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostItem.js",["230","231","232","233"],"import React from 'react';\r\nimport {FaUser} from \"react-icons/fa\"\r\nimport {BsCalendar3}from \"react-icons/bs\"\r\nimport {HiUserGroup} from \"react-icons/hi\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MdArrowForwardIos } from 'react-icons/md';\r\n\r\n\r\nconst PostItem = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    function postDetails(){\r\n        history.push(\"/posts-details/\"+props.post.postId); \r\n    }\r\n\r\n    return(\r\n        <div className='post-item-container'>\r\n            <div className='post-item'>\r\n                <div className=\"post-title-container\">\r\n                    <h1 className=\"post-title\">{props.post.title}</h1>\r\n                </div>\r\n                <div className=\"post-atributes\">\r\n                    {/*make it a div so it has a static place so the lenght doesnt matter */}\r\n                    <div className=\"post-atribute-item post-icon\"><FaUser color=\"green\" /></div>\r\n                    <div className=\"post-atribute-text\"><a className=\"post-atributes-text\">Published by: <b>{props.post.author}</b></a></div>\r\n                    <div className=\"post-atribute-item post-icon\"><BsCalendar3 color=\"green\" /></div>\r\n                    <div className=\"post-atribute-text\"><a className=\"post-atributes-text\">Date: {props.post.datePublished}</a></div>\r\n                    <div className=\"post-atribute-item post-icon\"><HiUserGroup color=\"green\" /></div>\r\n                    <div className=\"post-atribute-text\"><a className=\"post-atributes-text\">Group: {props.post.group}</a></div>\r\n                </div>\r\n                {/* the pcitures doesnt resize correctly like if I make the information tab bigger the picture get smaller ojeh and a button for read more*/}\r\n                <div className=\"post_content\">\r\n                    <div className=\"post-content-picture\">\r\n                        <img src={props.post.picture.url} alt={props.post.picture.name} className=\"post-image\" />\r\n                        {/* <a>test</a> */}\r\n                    </div>\r\n                    <div className=\"post-content-text\">\r\n                        <a className='post-content-text-item'>{props.post.content}</a>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='post-content-more'>\r\n                <b className='post-content-more-text' onClick={postDetails}>read more <MdArrowForwardIos className='post-content-more-icon'/> </b>\r\n            </div>\r\n            \r\n            {/* this is such a bad practice */}\r\n            {/* <div className=\"post-readmore\" >\r\n                <div className=\"readmore-button\" onClick={postDetails}>\r\n                    <a>read more</a>\r\n                </div>\r\n            </div> */}\r\n        </div>        \r\n    )\r\n}\r\n\r\n\r\nexport default PostItem;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\UseAxios.js",["234"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"http://localhost:8080\";\r\n\r\n\r\n// const { response, error, loading } = UseAxios({\r\n//   method: 'POST',\r\n//   url: '/posts',\r\n//   headers: {\r\n//     accept: '*/*',\r\n//   },\r\n//   data: {\r\n//     userId: 7,\r\n//     id: 777,\r\n//     title: 'New Post',\r\n//     body: 'This is a new post',\r\n//   },\r\n// });\r\n\r\nconst useAxios = (params) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async (params) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.request(params);\r\n      setResponse(res.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(params);\r\n  }, []);\r\n\r\n  return { response, error, loading };\r\n};\r\n\r\nexport default useAxios;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Contact.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostDetails.js",["235","236","237","238","239","240"],"import React from \"react\"\r\nimport './postDetails.css';\r\nimport useAxios from \"../UseAxios\";\r\nimport {FaUser} from \"react-icons/fa\"\r\nimport {BsCalendar3}from \"react-icons/bs\"\r\nimport {HiUserGroup} from \"react-icons/hi\"\r\n\r\nconst PostDetails = () => {\r\n\r\n    var id = window.location.pathname.replace(\"/posts-details/\",\"\")\r\n\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n      url: '/post/'+ id,\r\n    }); \r\n\r\n    const picture = () =>{\r\n      if(response.hasOwnProperty(\"picture\"))\r\n      {\r\n        return (\r\n          <img src={response.picture.url} alt={response.picture.name} className=\"post-body-picture\" />\r\n        )\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    if(response === null && error === null && loading ===false)\r\n    {\r\n        return(\r\n          <div className=\"post-details\">\r\n            <div className=\"post-response center\">\r\n              <a>loading posts</a>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    if(error != null)\r\n    {\r\n        return(\r\n          <div className=\"post-details\">\r\n            <div className=\"post-response center\">\r\n              <a>error loading posts</a>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n    else if(loading)\r\n    {\r\n        return(\r\n          <div className=\"post-details\">\r\n            <div className=\"post-response center\">\r\n              <a>loading posts</a>\r\n            </div>      \r\n          </div>\r\n        )\r\n    }\r\n    else if(response !== null)\r\n    { \r\n        return(\r\n          <div className=\"post-details\">\r\n            <div className=\"post-details-container\">\r\n              <div className=\"post-details-box\">\r\n                <div className=\"post-title-container\">\r\n                  <h1 className=\"post-title\">\r\n                    {response.title}\r\n                  </h1>\r\n                </div>\r\n                <div className=\"post-body\">\r\n                  {picture()}\r\n                  <p className=\"post-body-text\">\r\n                    {response.content}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-information-container center\">\r\n                <div className=\"post-information-box\">\r\n                  <div className=\"post-information-pair\">\r\n                    <div className=\"post-atribute-item post-icon\"><FaUser color=\"green\" /></div>\r\n                    <div className=\"post-atribute-text\"><a className=\"post-atributes-text\">Published by: <b>{response.author}</b></a></div>\r\n                  </div>\r\n                  <div className=\"post-information-pair\">\r\n                    <div className=\"post-atribute-item post-icon\"><BsCalendar3 color=\"green\" /></div>\r\n                    <div className=\"post-atribute-text\"><a className=\"post-atributes-text\">Date: {response.datePublished}</a></div>\r\n                  </div>\r\n                  <div className=\"post-information-pair\">\r\n                    <div className=\"post-atribute-item post-icon\"><HiUserGroup color=\"green\" /></div>\r\n                    <div className=\"post-atribute-text\"><a className=\"post-atributes-text\">Group: {response.group}</a></div>\r\n                  </div>\r\n                </div>\r\n              </div>   \r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostDetails","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\Chat.js",["241","242","243","244","245","246"],"import React, { useState, useEffect } from 'react';\r\nimport \"./chat.css\";\r\nimport useAxios from './../../UseAxios';\r\nimport {FaGreaterThan} from \"react-icons/fa\";\r\nimport ChatMessages from \"./ChatMessages\";\r\nimport ChatOptions from \"./ChatOptions\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Chat = () => \r\n{\r\n    const [currentChatId, setCurrentChatId]=useState(\"-1\"); \r\n    const [oldChatId, setOldChatId]=useState(\"-1\"); \r\n\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/conversation/'+ sessionStorage.getItem(\"userId\"),\r\n        headers: \r\n        {\r\n            Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n\r\n    if(sessionStorage.getItem(\"token\") === null)\r\n    {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n\r\n    async function resetChat(){\r\n        await sleep(500);\r\n        setOldChatId(currentChatId)\r\n    }\r\n\r\n    const chatsContainer = () =>{\r\n        if(error != null)\r\n        {\r\n            return(\r\n            <div className=\"center\">\r\n                <a>Error loading chat's</a>\r\n            </div>\r\n            )\r\n        }\r\n        else if(loading)\r\n        {\r\n            return(\r\n            <div className=\"center\">\r\n                <a>Loading chat's</a>\r\n            </div>\r\n            )\r\n        }\r\n        else if(response !== null)\r\n        {\r\n            if(response.length === 0)\r\n            {\r\n                return(\r\n                <div className=\"chats-box\">\r\n                    <div className='chat-group-box'>\r\n                        <h1>chats:</h1>\r\n                        <a>no chats found</a>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                <div className=\"chats-box\">\r\n                    <div className='chats-box-flex'>\r\n                        <div className='chats-title'>\r\n                            <h1>chats:</h1>\r\n                        </div>\r\n                        <div className='chats-chats'>\r\n                            {response.map((chats)=>(\r\n                            <div className='chats-chats-box' onClick={() => setCurrentChatId(chats.conversationId)}>\r\n                                <a className='chats-chats-title'>{chats.groupName}</a>\r\n                                <div class=\"chats-chats-icon\">\r\n                                    <FaGreaterThan />\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const messageContainer = () =>{\r\n        if(currentChatId === \"-1\" )\r\n        {\r\n            return(\r\n            <div className=\"messages-box\">\r\n                <div className='messages-title-response'>\r\n                    <h1>select a chat</h1>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else if(currentChatId === oldChatId )\r\n        {\r\n            return (\r\n                <ChatMessages\r\n                    conversationId ={currentChatId}\r\n                />\r\n            )\r\n        }\r\n        else if(currentChatId !== oldChatId)\r\n        {\r\n            resetChat()\r\n            return (\r\n            <div className=\"center\">\r\n                <a>Loading chat's</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-chat-container\">\r\n            <div className=\"contact-chat-box\">\r\n                <div className=\"options-container center\">\r\n                    {<ChatOptions/>}\r\n                </div>\r\n                <div class=\"vl\"></div>\r\n                <div className=\"chats-container\">\r\n                    {chatsContainer()}\r\n                </div>\r\n                <div class=\"vl\"></div>\r\n                <div className=\"messages-container center\">\r\n                    {messageContainer()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\nexport default Chat;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatOptions.js",["247","248","249","250","251","252","253","254"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport useAxios from './../../UseAxios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\n\r\nconst ChatOptions = () => \r\n{\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/conversation',\r\n        headers: {\r\n        Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n\r\n    const [startChatId, setStartChatId]=useState(\"-1\"); \r\n\r\n    //creating the chat\r\n    const [createChatResponse, setCreateChatResponse] = useState(null);\r\n    const [createChatError, setCreateChatError] = useState(null);\r\n    const [createChatLoading, setCreateChatLoading] = useState(false);\r\n\r\n  \r\n    async function addChat(event){\r\n        event.preventDefault();\r\n\r\n        if(startChatId !== \"-1\")\r\n        {\r\n            const params = {\r\n                method: 'post',\r\n                url: '/conversation',\r\n                headers: \r\n                {\r\n                    Authorization: sessionStorage.getItem(\"token\"),\r\n                },\r\n                data: \r\n                {\r\n                    userId: sessionStorage.getItem(\"userId\"),\r\n                    groupId: startChatId,\r\n                },\r\n            }\r\n            \r\n            setCreateChatLoading(true);\r\n            try {\r\n                const res = await axios.request(params);\r\n                setCreateChatResponse(res.data);\r\n                setCreateChatError(null);\r\n            } catch (err) {\r\n                setCreateChatError(err);\r\n            } finally {\r\n                setCreateChatLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const addChatResponse = () =>{\r\n        if(createChatResponse === null && createChatError === null && createChatLoading ===false)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a> </a>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(createChatError != null)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>failed to add chat</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(createChatLoading)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>prossesing chat</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(createChatResponse !== null)\r\n        { \r\n            resetWindow()\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>chat added</a>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n\r\n    async function resetWindow(){\r\n        await sleep(500);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const handleGroupChange = (e) =>{\r\n        setStartChatId(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    if(response === null && error === null && loading ===false)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n                <a>Error loading chat options</a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(error != null)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n                <a>Error loading chat options</a>\r\n            </div>\r\n        )\r\n    }\r\n    else if(loading)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n                <a>Loading chat options</a>\r\n            </div>\r\n        )\r\n    }\r\n    else if(response !== null)\r\n    {\r\n        return(\r\n            <div className=\"options-box center\">\r\n                <form onSubmit={addChat} className='options-form'>\r\n                    <label for=\"groups\" className='options-form-label'>Chose a group to chat with:</label>\r\n                    <select name=\"groups\" value={startChatId} onChange={handleGroupChange} className='options-from-select'>\r\n                        <option value=\"-1\">select group:</option>\r\n                        {response.map((group) =>(\r\n                        <option value={group.id}>{group.name}</option>                 \r\n                        ))}\r\n                    </select>\r\n                    <input type=\"submit\" className='options-from-submit' value=\"start\"/>\r\n                    {addChatResponse()}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatOptions;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatMessages.js",["255","256"],"import React, { useState, useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport useAxios from './../../UseAxios';\r\n\r\n\r\n\r\nconst ChatMessages = (props) =>{\r\n\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [messageText,setMessageText] = useState(\"\");\r\n    const [once,setOnce] = useState(false);\r\n\r\n    //recieved\r\n    const [messages, setRecievedMessages] = useState([]);\r\n    //the chat is loaded\r\n\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/conversation/messages/'+props.conversationId,\r\n        headers: {\r\n        Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n  \r\n    useEffect(() => {\r\n        // use SockJS as the websocket client\r\n        const socket = SockJS(process.env.REACT_APP_DOMAIN+\"/ws\");\r\n        // Set stomp to use websockets\r\n        const stompClient = Stomp.over(socket);\r\n        // connect to the backend\r\n        stompClient.connect({}, () => {\r\n            // subscribe to the backend\r\n            stompClient.subscribe('/topic/message/' + props.conversationId, (data) => {\r\n            //console.log(data);\r\n            onMessageReceived(data);\r\n            });\r\n        });\r\n        // maintain the client for sending and receiving\r\n        setStompClient(stompClient);\r\n    }, []);\r\n\r\n    // send the data using Stomp\r\n    function sendMessage(e) {\r\n        e.preventDefault()\r\n        if(/*user != null && */messageText !== \"\" && response !== null)\r\n        {\r\n            setMessageText(\"\")\r\n            stompClient.send(\"/app/create\",{},JSON.stringify({\r\n            'conversationId':props.conversationId,\r\n            'userId': sessionStorage.getItem(\"userId\"),\r\n            'message': messageText\r\n            }))\r\n        }\r\n    }\r\n\r\n    const loadMessages = () =>{\r\n        return(\r\n            messages.map((message)=>(\r\n            <div className='message-box'>\r\n                <b>{message.userName}: </b>\r\n                <a>{message.message}</a>\r\n            </div>\r\n            ))\r\n        )\r\n    }\r\n  \r\n    const onChange = e => {\r\n        setMessageText(e.target.value)\r\n    }\r\n        \r\n\r\n    const onMessageReceived = (data) =>{\r\n        setRecievedMessages(messages => [JSON.parse(data.body), ...messages])\r\n    }\r\n\r\n  //TODO, add a solution for disconnection\r\n    if(response === null && error === null && loading ===false)\r\n    {\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-title-response center'>\r\n                <h1>select a chat</h1>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if(error != null)\r\n    {\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-title-response center'>\r\n                <h1>error fetching chat</h1>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(loading)\r\n    {\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-title-response center'>\r\n                <h1>fetching the chat</h1>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(response !== null)\r\n    { \r\n        if(once === false)\r\n        {\r\n            setOnce(true)\r\n            setRecievedMessages(response.messages)\r\n        }\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-box-flex'>\r\n                <div className=\"messages-up\">     {/*fix this shit the message is in the scroll box */}           \r\n                    <div className='messages-title'>\r\n                        <h1>messages:</h1>\r\n                    </div>\r\n                    <div className=\"messages-messages\">\r\n                        {loadMessages()}\r\n                    </div>\r\n                </div>\r\n                <div className='messages-down'>\r\n                    <form onSubmit={sendMessage} className=\"messages-form\" autocomplete=\"off\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"messages-form-text\" \r\n                            value={messageText}\r\n                            name=\"message\" \r\n                            placeholder=\"message..\"\r\n                            onChange={onChange}\r\n                        />         \r\n                        <div className=\"messages-form-submit-box\">\r\n                            <input type=\"submit\"className=\"messages-form-submit\" value=\"Send message\"/>\r\n                        </div>\r\n                    </form> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatMessages;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Dropdown\\Dropdown.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Dropdown\\DropdownItem.js",["257","258","259","260"],"import {useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {FaCaretDown} from \"react-icons/fa\"\r\n\r\nconst DropdownItem = props => \r\n{\r\n    const history = useHistory();\r\n    const[Width, setWidth] = useState(200)\r\n\r\n    const redirect = (link) =>\r\n    {\r\n        history.push(link); \r\n    }\r\n\r\n    useEffect(() => {\r\n        var temp =  document.getElementById(props.item.id).clientWidth\r\n        temp = temp + 50\r\n        setWidth(temp)\r\n        // console.log(width)\r\n        // console.log(document.getElementById(props.item.id).clientWidth)\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <div id={props.item.id} className='dropdown-item'>\r\n            <div class=\"dropdown-button\"  onClick={() => redirect(props.item.route)}>\r\n                <a className='dropdown-content-text dropdown-content-text-button'>{props.item.title}</a>\r\n                <FaCaretDown className='dropdown-caret' />\r\n            </div>\r\n            <div className=\"dropdown-content\" style={{width: Width }}>\r\n                <a onClick={() => redirect(props.item.route)} className='dropdown-content-text dropdown-content-text-down'>{props.item.title}</a>\r\n                {props.item.subPages.map((page)=>(\r\n                    <a  className='dropdown-content-text dropdown-content-text-down' onClick={() => redirect(page.route)}>{page.title}</a>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownItem","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\User\\Register.js",["261","262","263","264","265","266","267","268"],"import React, {useState} from \"react\"\r\nimport {Router, useHistory } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\nimport \"./register.css\"\r\n\r\nconst Register = () => {\r\n\r\n    const history = useHistory();\r\n    const [once,setOnce] = useState(false);\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [pasword_backupError, setPassword_backupError] = useState(\"\");\r\n\r\n    const errorStyle = {\r\n        color:\"red\"\r\n    } \r\n\r\n    const [userDetails,setUserDetials] = useState({\r\n        name :\"\",\r\n        username :\"\",\r\n        email :\"\",\r\n        password :\"\",\r\n        password_backup : \"\",\r\n        phonenumber :\"\"\r\n    });\r\n\r\n    const goBack = () =>{\r\n        if(sessionStorage.getItem(\"token\") !== null && once === false)\r\n        {\r\n            setOnce(true)\r\n            history.goBack()\r\n        }\r\n    }\r\n    \r\n    const onChange = e => {\r\n        setUserDetials({\r\n            ...userDetails,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const axiosDataResponse = () =>{\r\n\r\n    }\r\n\r\n    async function register(event){\r\n        event.preventDefault();\r\n\r\n        if(userDetails.name === \"\")\r\n        {\r\n            setNameError(\"*enter a name\")\r\n        }\r\n        if(userDetails.username === \"\")\r\n        {\r\n            setUsernameError(\"*enter a username\")\r\n        }\r\n        if(userDetails.email === \"\")\r\n        {\r\n            setEmailError(\"*enter a email\")\r\n        }\r\n        if(userDetails.password === \"\")\r\n        {\r\n            setPasswordError(\"*enter a password\")\r\n        }\r\n        if(userDetails.password === \"\")\r\n        {\r\n            setPassword_backupError(\"*enter a password\")\r\n        }\r\n\r\n        if(userDetails.password !== \"\" && userDetails.password_backup !== \"\" && userDetails.email !== \"\" && userDetails.username !== \"\" && userDetails.name !== \"\" && userDetails.password === userDetails.password_backup)\r\n        {\r\n            const params = {\r\n                method: 'post',\r\n                url: '/user/register',\r\n                data:{\r\n                    name:userDetails.name,\r\n                    username:userDetails.username,\r\n                    email:userDetails.email,\r\n                    password:userDetails.password,\r\n                    phonenumber:\"\"\r\n                }\r\n            }\r\n            \r\n            setLoading(true);\r\n            try {\r\n                const res = await axios.request(params);\r\n                setResponse(res.data);\r\n                setError(null);\r\n                if(res.data.includes(\"-\"))\r\n                {\r\n                    history.push(\"/\")\r\n                }\r\n                \r\n            } catch (err) {\r\n                setError(err);\r\n            } finally {\r\n                setLoading(false);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"register-container\">\r\n            {goBack()}\r\n            <div className=\"register-box\">\r\n                <form onSubmit={register} className=\"register-form-register\">\r\n                    <label htmlFor=\"name\" className=\"register-label\">name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"name\" \r\n                        className=\"register-text\" \r\n                        value={userDetails.name}\r\n                        name=\"name\" \r\n                        placeholder=\"Name..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-register\">{nameError}</a>\r\n                    <label htmlFor=\"username\" className=\"register-label\">your username:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"username\" \r\n                        className=\"register-text\" \r\n                        value={userDetails.username}\r\n                        name=\"username\" \r\n                        placeholder=\"Username..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-register\">{usernameError}</a>\r\n                    <label htmlFor=\"email\" className=\"register-label\">E-mail address:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"email\" \r\n                        className=\"register-text\" \r\n                        value={userDetails.email}\r\n                        name=\"email\" \r\n                        placeholder=\"E-mail..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-register\">{emailError}</a>\r\n                    <label htmlFor=\"password\" className=\"register-label\">Password:</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        id=\"password\" \r\n                        className=\"register-text\" \r\n                        value={userDetails.password}\r\n                        name=\"password\" \r\n                        placeholder=\"Password..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-register\">{passwordError}</a>\r\n                    <label htmlFor=\"password-backup\" className=\"register-label\">confirm password:</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        id=\"password\" \r\n                        className=\"register-text\" \r\n                        value={userDetails.password_backup}\r\n                        name=\"password_backup\" \r\n                        placeholder=\"Confirm password..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-register\">{pasword_backupError}</a>\r\n                    <div className=\"axios-response\" style={error !=null ? errorStyle : null}>\r\n                        {axiosDataResponse()}\r\n                    </div>\r\n                        \r\n                    <div className=\"submit\">\r\n                        <input type=\"submit\"className=\"register-form-submit register-form-submit-register\" value=\"register\"/>\r\n                    </div>\r\n                </form> \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Register","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\EditorContainer.js",["269","270","271"],"import React, { useState, useEffect } from \"react\"\r\nimport { Route, Switch, useHistory } from 'react-router';\r\nimport PostContainer from './Post/PostContainer'\r\nimport PageNotFound from \"../General/PageNotFound\";\r\n\r\nconst EditorContainer = props => {\r\n  const history = useHistory();\r\n  const [once,setOnce] = useState(false);\r\n  const goBack = () =>{\r\n    if(sessionStorage.getItem(\"token\") === null && once === false)\r\n    {\r\n        setOnce(true)\r\n        history.goBack()\r\n    }\r\n  }\r\n\r\n\r\n  const noConnections = () =>{\r\n      return(\r\n        <PageNotFound\r\n            code={500}\r\n            message={\"no server connection\"}\r\n          />\r\n      )\r\n  }\r\n\r\n  const {url} = props;\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      {goBack()}\r\n        <Switch>\r\n            <Route path = {url + \"/post\"}>\r\n                <PostContainer/>\r\n            </Route>\r\n          <Route path = {url +\"/\"}>\r\n            <a>this is the editor section. here will be buttons displayed to navigate to your desired subsection</a>\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditorContainer\r\n\r\n\r\n","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\PostCreate.js",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React, {useState} from \"react\"\r\nimport {useHistory } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\nimport useAxios from \"../../General/UseAxios\"\r\n\r\nconst CreatePost = () => {\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    const [errorGroup, setErrorGroup] = useState(\"\");\r\n    const [errorPicture, setErrorPicture] = useState(\"\");\r\n    const [errorTitle, setErrorTitle] = useState(\"\");\r\n    const [errorContent, setErrorContent] = useState(\"\");\r\n\r\n\r\n    const [pictureResponse, setpictureResponse] = useState(null);\r\n    const [pictureError, setpictureError] = useState(null);\r\n    const [pictureLoading, setpictureLoading] = useState(false);\r\n\r\n    const [createResponse, setResponse] = useState(null);\r\n    const [createError, setError] = useState(null);\r\n    const [createLoading, setLoading] = useState(false);\r\n\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/group/null/null',\r\n        headers: {\r\n            Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n\r\n    const errorStyle = {\r\n        color:\"red\"\r\n    } \r\n\r\n    const [postDetails,setPostDetials] = useState({\r\n        groupId:\"-1\",\r\n        picture :null,\r\n        title :\"test\",\r\n        content : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi pellentesque facilisis justo, ut vulputate odio gravida quis. Mauris quis vulputate purus. Vestibulum commodo odio rutrum lacus gravida, in mattis tellus tristique. Nunc laoreet euismod augue et eleifend. Suspendisse condimentum cursus sem, sed finibus augue blandit iaculis. In semper finibus dolor ac ullamcorper. Donec scelerisque lobortis blandit. Donec congue tortor neque, id scelerisque metus hendrerit at. Morbi tincidunt, ex eu commodo tempor, urna ipsum feugiat elit, et varius eros purus semper sapien. Phasellus tempor augue pharetra urna venenatis, sit amet cursus nibh auctor. Aliquam erat volutpat. Quisque eu odio nec risus feugiat elementum non vitae sem. Curabitur vel quam a nibh porta ultrices ut vel metus. Sed vestibulum metus ac sagittis interdum In elementum at erat id lacinia. Morbi tristique mauris ipsum, id pellentesque arcu sagittis in. Phasellus maximus, massa vel mattis feugiat, libero tortor congue justo, eu faucibus tortor odio eget urna. Proin mollis risus quis dolor auctor eleifend. Etiam quis hendrerit ipsum, a interdum risus. Suspendisse luctus hendrerit ligula et ornare. Phasellus at auctor ligula, vel aliquam quam. Praesent elementum tortor libero, eget vestibulum nulla eleifend quis. Aenean convallis, est eget consequat molestie, felis quam malesuada ipsum, et tincidunt est justo nec ante. Etiam sollicitudin, magna a fermentum ultricies, nisl sapien malesuada enim, volutpat ultricies diam lacus eget lectus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nunc nulla nisi, pretium et mauris et, egestas hendrerit nisl. Aenean fermentum, nunc vel laoreet dignissim, enim lectus eleifend erat, dictum blandit diam augue ullamcorper massa. Phasellus volutpat gravida imperdiet. Pellentesque sit amet nisl at est pretium commodo. Quisque venenatis erat in ultricies posuere. In sollicitudin sed dui et gravida. Curabitur est magna, semper sed metus at, vestibulum hendrerit urna. Fusce vel iaculis libero. Pellentesque sollicitudin malesuada pharetra. Proin metus nisi, auctor in turpis sit amet, pharetra elementum sapien. Sed vel ligula risus. Ut ante nulla, tempus id ultricies non, interdum non eros. Nam venenatis sodales iaculis. In ac scelerisque elit, id ullamcorper nisi. Sed gravida ut metus id tristique. Cras semper feugiat diam convallis sollicitudin.In eu vestibulum tellus. Cras nec eros lacus. Donec blandit nunc quis eros porta blandit. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vestibulum non arcu eu enim rhoncus ultricies. Mauris posuere turpis massa, at imperdiet lectus viverra nec. Etiam et rutrum lectus. Maecenas ac pharetra ante. Donec dapibus lectus eget ipsum aliquam, ut aliquet est volutpat. In hac habitasse platea dictumst. Sed molestie, odio quis lobortis vestibulum, ex massa tempus felis, ac ultrices lacus est ac nisi.In tincidunt velit quis dui egestas tempus. Nulla tincidunt egestas convallis. Morbi sed convallis nibh, id euismod metus. Praesent sagittis pharetra efficitur. Phasellus luctus ultrices diam vitae rhoncus. Vivamus sollicitudin suscipit sollicitudin. Cras et maximus nunc, non commodo ex. Nullam viverra mauris sed diam placerat, sit amet consequat risus mattis. Proin luctus arcu ac diam vehicula tincidunt. Donec lectus mauris, porta nec elit eu, congue tristique nulla. Duis enim mi, luctus non tortor id, mollis dapibus ante. Mauris pharetra turpis libero, a ornare magna finibus id. Vivamus vel dui vehicula, ullamcorper nibh vitae, bibendum nulla. Fusce quis lacinia arcu, vel hendrerit turpis. Mauris vehicula quam egestas, placerat purus ut, bibendum nibh. \"\r\n    });\r\n    \r\n    const onChange = e => {\r\n        setPostDetials({\r\n            ...postDetails,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const onPictureChange = (e) =>{\r\n        setPostDetials({\r\n            ...postDetails,\r\n            [e.target.name]: e.target.files[0],\r\n        })\r\n      }\r\n\r\n    const selectGroup = () =>{\r\n        if(response === null && error === null && loading ===false)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a> </a>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(error != null)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>failed to get groups</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(loading)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>prossesing groups</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(response !== null)\r\n        { \r\n            return(\r\n                <select name=\"groupId\" value={postDetails.groupId} onChange={onChange} className='options-form-select createpost-text-width'>\r\n                    <option value=\"-1\">select group:</option>\r\n                    {response.map((group) =>(\r\n                        \r\n                        <option value={group.id}>{group.name}</option>                 \r\n                    ))}\r\n                </select>\r\n            )\r\n        }\r\n    }\r\n\r\n    const axiosDataResponse = () =>{\r\n        if(createResponse === null && createError === null && createLoading ===false)\r\n        {\r\n            return(\r\n                <div className=\"axios-response\">\r\n                    <a></a>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(createError != null)\r\n        {\r\n            return(\r\n                <div className=\"axios-response\">\r\n                    <a>error creating post</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(createLoading)\r\n        {\r\n            return(\r\n                <div className=\"axios-response\">\r\n                    <a>processing post</a>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else if(createResponse !== null)\r\n        { \r\n            return(\r\n                <div className=\"axios-response\">\r\n                    <a>creating the post sucseeded</a>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // function sleep(ms) {\r\n    //     return new Promise(resolve => setTimeout(resolve, ms));\r\n    // }\r\n    async function uploadPicture()\r\n    {\r\n        const formData = new FormData();\r\n        formData.append('file',postDetails.picture)\r\n        const params = {\r\n            method: 'post',\r\n            url: '/picture',\r\n            headers: \r\n            {\r\n                \"Content-Type\":'multipart/form-data',\r\n                Authorization: sessionStorage.getItem(\"token\"),\r\n            },\r\n            data:formData\r\n        }\r\n        \r\n        setpictureLoading(true);\r\n        try {\r\n            const res = await axios.request(params);\r\n            setpictureResponse(res.data);\r\n            setpictureError(null);\r\n            uploadPost(res)\r\n        } catch (err) {\r\n            setpictureError(err);\r\n            return false\r\n        } finally {\r\n            setpictureLoading(false);\r\n            return true\r\n        }\r\n    }\r\n\r\n    async function uploadPost(res)\r\n    {\r\n        const params = {\r\n            method: 'post',\r\n            url: '/post',\r\n            headers: \r\n            {\r\n                Authorization: sessionStorage.getItem(\"token\"),\r\n            },\r\n            data: \r\n            {\r\n                authorId: sessionStorage.getItem(\"userId\"),\r\n                groupId: postDetails.groupId,\r\n                pictureId: res.data.pictureId,\r\n                title:postDetails.title,\r\n                content:postDetails.content\r\n            },\r\n        }\r\n        \r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.request(params);\r\n            setResponse(res.data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n            window.location.reload(false)\r\n        }\r\n    }\r\n\r\n    async function createPost(event){\r\n        event.preventDefault();\r\n\r\n        if(postDetails.groupId === \"-1\" )\r\n        {\r\n            setErrorGroup(\"*select a group\")\r\n        }\r\n        else{\r\n            setErrorGroup(\"\")\r\n        }\r\n\r\n        if(postDetails.picture === null)\r\n        {\r\n            setErrorPicture(\"*select a picture\")\r\n        }\r\n        else{\r\n            setErrorPicture(\"\")\r\n        }\r\n\r\n        if(postDetails.title === \"\")\r\n        {\r\n            setErrorTitle(\"*enter a title\")\r\n        }\r\n        else{\r\n            setErrorTitle(\"\")\r\n        }\r\n\r\n        if(postDetails.content ===  \"\"|| postDetails.content.length <= 250)\r\n        {\r\n            setErrorContent(\"*Enter Content of atleast 250 chars\")\r\n        }\r\n        else{\r\n            setErrorContent(\"\")\r\n        }\r\n\r\n        if(postDetails.content !==  \"\" || postDetails.content.length >= 250)\r\n        {\r\n            if(postDetails.title !== \"\" &&  postDetails.picture !== null && postDetails.groupId !== \"-1\" )\r\n            {\r\n                uploadPicture()\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"createpost-container\">\r\n            <div className=\"createpost-box\">\r\n                <form onSubmit={createPost} className=\"createpost-form\">\r\n                    <h1>create posts:</h1>\r\n                    <label for=\"groups\" className='createpost-label'>Chose a group:</label>\r\n                    {selectGroup()}\r\n                    <a className=\"error-createpost\">{errorGroup}</a>\r\n\r\n                    <label htmlFor=\"name\" className=\"createpost-label\">picture:</label>\r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"createpost-file createpost-text-width\" \r\n                        name=\"picture\" \r\n                        onChange={onPictureChange}\r\n                    />\r\n                    <a className=\"error-createpost\">{errorPicture}</a>\r\n\r\n                    <label htmlFor=\"title\" className=\"createpost-label\">title:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"createpost-text createpost-text-spacing\" \r\n                        value={postDetails.title}\r\n                        name=\"title\" \r\n                        placeholder=\"Title..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-createpost\">{errorTitle}</a>\r\n                    <label htmlFor=\"content\" className=\"createpost-label\">content:</label>\r\n                    <textarea  \r\n                        type=\"text-area\" \r\n                        className=\"createpost-text createpost-text-width \" \r\n                        value={postDetails.content}\r\n                        name=\"content\" \r\n                        placeholder=\"Content..\"\r\n                        rows={10}\r\n                        onChange={onChange}\r\n                    />\r\n                    <a className=\"error-createpost\">{errorContent}</a>\r\n\r\n                    <div className=\"axios-response\" style={error !=null ? errorStyle : null}>\r\n                        {axiosDataResponse()}\r\n                    </div>\r\n                        \r\n                    <div className=\"submit\">\r\n                        <input type=\"submit\"className=\"createpost-form-submit-post\" value=\"create post\"/>\r\n                    </div>\r\n                </form> \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CreatePost","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\PostContainer.js",["288","289"],"import React, {useState} from \"react\"\r\nimport {useHistory } from \"react-router-dom\"\r\nimport \"./editor.css\"\r\n\r\nimport PostCreate from \"./PostCreate\"\r\nimport PostList from \"./List/PostList\"\r\n\r\nconst PostContainer = () =>{\r\n    const history = useHistory();\r\n    \r\n    return(\r\n        <div className=\"editor-post-container\">\r\n            <PostCreate/>\r\n            <PostList/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostContainer","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\List\\PostList.js",["290","291","292"],"import React from \"react\"\r\nimport PostItem from \"./PostItem\"\r\nimport useAxios from \"../../../General/UseAxios\"\r\n\r\nconst PostList = () => {\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/post/author/' + sessionStorage.getItem(\"userId\"),\r\n        headers: {\r\n            Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n\r\n    if(response !== undefined && response !== null && response !== \"null\")\r\n    {\r\n        return (\r\n            <div className=\"editor-post-container-box\" >\r\n                {response.map(post => (\r\n                <PostItem\r\n                    key={post.id}\r\n                    post={post}\r\n                />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <a>error</a>\r\n        )\r\n    }\r\n}\r\nexport default PostList","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Editor\\Post\\List\\PostItem.js",["293","294","295","296","297","298"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupSave.js",["299","300","301","302"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\List\\GroupList.js",["303","304"],"import React from \"react\"\r\nimport GroupItem from \"./GroupItem\"\r\nimport useAxios from \"./../../../General/UseAxios\"\r\n\r\nconst GroupList = () => {\r\n\r\n  const { response, error, loading } = useAxios({\r\n    method: 'get',\r\n    url: '/group/null/null',\r\n    headers: \r\n    {\r\n        Authorization: sessionStorage.getItem(\"token\"),\r\n    },\r\n  }); \r\n\r\n  if(response !== null)\r\n  {\r\n    return (\r\n      <div className=\"admin-group-list-container\">\r\n        {response.map(group => (\r\n          <GroupItem\r\n            key={group.id}\r\n            group={group}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  else\r\n  {\r\n    return(\r\n      <div className=\"admin-group-list-container\">\r\n        error\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default GroupList","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\List\\GroupItem.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n  \r\nconst GroupItem = props => {\r\n\r\n    const history = useHistory();\r\n    const [editing, setEditing] = useState(false)\r\n    const [vars, setVars] = useState(props.group)\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    const details = () =>{\r\n        history.push(\"/admin/groups/\"+props.group.id); \r\n    }\r\n\r\n    const handleEditing = () => {\r\n        if(editing === false)\r\n        {\r\n            setEditing(true)\r\n        }\r\n        else{\r\n            setEditing(false)\r\n            handleUpdatedDone()\r\n        }\r\n    }\r\n\r\n    //cancel button in progress\r\n    const save = () =>{\r\n        handleUpdatedDone()\r\n        setEditing(false)\r\n    }\r\n    \r\n    const editOrSave = () => {\r\n        if(editing === false)\r\n        {\r\n            return(\r\n                <a>edit</a>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <a>save</a>\r\n            )\r\n        }\r\n    }\r\n\r\n    async function handleUpdatedDone(){\r\n        const params = {\r\n            method: 'put',\r\n            url: '/group/',\r\n            data:{\r\n                id:vars.id,\r\n                name:vars.name,\r\n                category:vars.category,\r\n                pictureId:-1,\r\n                rank:-1\r\n            },\r\n            headers: \r\n            {\r\n                Authorization: sessionStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n        \r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.request(params);\r\n            setResponse(res.data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const onChange = e => {\r\n        setVars({\r\n            ...vars,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    if (editing) {\r\n        viewMode.display = \"none\"\r\n    } else {\r\n        editMode.display = \"none\"\r\n    }\r\n\r\n    return(\r\n        <div className='admin-group-list-item'>\r\n            <div className='admin-group-list-item-container'>\r\n                <div className='admin-group-list-item-image'>\r\n                    <a>img</a>\r\n                </div>\r\n                <div className='admin-group-list-item-content' style={viewMode}>\r\n                    <a>name:{vars.name}</a>\r\n                    <a>category:{vars.category}</a>\r\n                    <a>active:{vars.active.toString()}</a>\r\n                </div>\r\n                <div className='admin-group-list-item-content-edit' style={editMode}>\r\n                    <a>name:</a>\r\n                    <input\r\n                        type=\"text\"\r\n                        style={editMode}\r\n                        className=\"\"\r\n                        name=\"name\"\r\n                        value={vars.name}\r\n                        onChange={onChange}\r\n                    />\r\n                    <a>category: (no dropdown box yet)</a>\r\n                    <input\r\n                        type=\"text\"\r\n                        style={editMode}\r\n                        className=\"\"\r\n                        name=\"category\"\r\n                        value={vars.category}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='admin-group-list-item-details'onClick={details}>\r\n                    <a>details</a>\r\n                </div>\r\n                <div className='admin-group-list-item-edit'onClick={handleEditing}>\r\n                    {editOrSave()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className='item' onClick={() => props.getGroupDetails(props.group.id)}>\r\n        //     <div className=\"groupPictureDiv\">\r\n        //         <img src={props.group.pictureUrl} className=\"groupPicture\" />\r\n        //     </div>\r\n        //     <div className=\"groupItemsDiv\">\r\n        //         <b>{props.group.name}</b><br />\r\n        //         <a>category: {props.group.category}</a><br />\r\n        //         <a>is active: {props.group.active.toString()}</a>\r\n        //     </div>\r\n        // </div>        \r\n    )\r\n}\r\n\r\n\r\nexport default GroupItem;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\List\\UserList.js",["319","320"],"import React from \"react\"\r\nimport UserItem from \"./UserItem\"\r\nimport useAxios from \"../../../General/UseAxios\"\r\n\r\nconst UserList = () => {\r\n\r\n  const { response, error, loading } = useAxios({\r\n    method: 'get',\r\n    url: '/user/',\r\n    headers: \r\n    {\r\n        Authorization: sessionStorage.getItem(\"token\"),\r\n    },\r\n  }); \r\n\r\n  if(response !== null)\r\n  {\r\n    return (\r\n      <div className=\"admin-user-list-container\">\r\n        {response.map(user => (\r\n          <UserItem\r\n            key={user.userId}\r\n            user={user}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  else\r\n  {\r\n    return(\r\n      <div className=\"admin-user-list-container\">\r\n        error\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default UserList","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserSave.js",["321","322","323","324","325","326","327","328"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\List\\UserItem.js",["329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n  \r\nconst UserItem = props => {\r\n\r\n    const history = useHistory();\r\n    const [editing, setEditing] = useState(false)\r\n    const [willDelete, setDelete] = useState(0)\r\n    const [vars, setVars] = useState(props.user)\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    const details = () =>{\r\n        history.push(\"/admin/users/\"+props.user.userId); \r\n    }\r\n\r\n    const handleEditing = () => {\r\n        if(editing === false)\r\n        {\r\n            setEditing(true)\r\n        }\r\n        else{\r\n            setEditing(false)\r\n            handleUpdatedDone()\r\n        }\r\n    }\r\n\r\n    //cancel button in progress\r\n    const save = () =>{\r\n        handleUpdatedDone()\r\n        setEditing(false)\r\n    }\r\n    \r\n    const editOrSave = () => {\r\n        if(editing === false)\r\n        {\r\n            return(\r\n                <a>edit</a>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <a>save</a>\r\n            )\r\n        }\r\n    }\r\n\r\n    const clickDelete = () =>{\r\n        setDelete(willDelete+ 1)\r\n        if(willDelete === 1)\r\n        {\r\n            deleteUser()\r\n        }\r\n    }\r\n\r\n    const deleteText = () =>{\r\n        \r\n        if(willDelete === 1)\r\n        {\r\n            return(\r\n                <a>are you sure you want to delete</a>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <a>delete</a>\r\n            )\r\n        }\r\n    }\r\n\r\n    async function deleteUser(){\r\n        const params = {\r\n            method: 'delete',\r\n            url: '/user/'+vars.userId,\r\n            headers: \r\n            {\r\n                Authorization: sessionStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n        \r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.request(params);\r\n            setResponse(res.data);\r\n            setError(null);\r\n            vars.name = \"(DELETED)\"\r\n            vars.username = \"(DELETED)\"\r\n            vars.email = \"(DELETED)\"\r\n            vars.phonenumber = \"(DELETED)\"\r\n            vars.role = \"DELETED\"\r\n            vars.active = false\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function handleUpdatedDone(){\r\n        const params = {\r\n            method: 'put',\r\n            url: '/user/',\r\n            data:{\r\n                id:vars.userId,\r\n                name:vars.name,\r\n                username:vars.username,\r\n                phonenumber:vars.phonenumber,\r\n                role:vars.role,\r\n            },\r\n            headers: \r\n            {\r\n                Authorization: sessionStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n        \r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.request(params);\r\n            setResponse(res.data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const onChange = e => {\r\n        setVars({\r\n            ...vars,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    if (editing) {\r\n        viewMode.display = \"none\"\r\n    } else {\r\n        editMode.display = \"none\"\r\n    }\r\n\r\n    return(\r\n        <div className='admin-user-list-item'>\r\n            <div className='admin-user-list-item-container'>\r\n                <div className='admin-user-list-item-image'>\r\n                    <a>img</a>\r\n                </div>\r\n                <div className='admin-user-list-item-content' style={viewMode}>\r\n                    <a>name:{vars.name}</a>\r\n                    <a>username:{vars.username}</a>\r\n                    <a>email:{vars.email}</a>\r\n                    <a>phonenumber:{vars.phonenumber}</a>\r\n                    <a>role:{vars.role}</a>\r\n                    <a>active:{vars.active.toString()}</a>\r\n                </div>\r\n                <div className='admin-user-list-item-content-edit' style={editMode}>\r\n                    <a>name:</a>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"admin-user-list-item-content-text\"\r\n                        name=\"name\"\r\n                        value={vars.name}\r\n                        onChange={onChange}\r\n                    />\r\n                    <a>username:</a>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"admin-user-list-item-content-text\"\r\n                        name=\"username\"\r\n                        value={vars.username}\r\n                        onChange={onChange}\r\n                    />\r\n                    <a>phonenumber:</a>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"admin-user-list-item-content-text\"\r\n                        name=\"phonenumber\"\r\n                        value={vars.phonenumber}\r\n                        onChange={onChange}\r\n                    />\r\n                    <a>role: (no dropdown box yet and needs to be in caps)</a>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"admin-user-list-item-content-text\"\r\n                        name=\"role\"\r\n                        value={vars.role}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='admin-user-list-item-delete'onClick={clickDelete}>\r\n                    {deleteText()}\r\n                </div>\r\n                <div className='admin-user-list-item-details'onClick={details}>\r\n                    <a>details</a>\r\n                </div>\r\n                <div className='admin-user-list-item-edit'onClick={handleEditing}>\r\n                    {editOrSave()}\r\n                </div>\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\n\r\nexport default UserItem;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserDetails.js",["350","351","352","353","354","355"],"import React from \"react\"\r\nimport useAxios from \"../../General/UseAxios\";\r\n\r\nconst UserDetails = () => {\r\n\r\n    var id = window.location.pathname.replace(\"/admin/users/\",\"\")\r\n\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n      method: 'get',\r\n      url: '/user/'+ id,\r\n      headers: \r\n      {\r\n          Authorization: sessionStorage.getItem(\"token\"),\r\n      },\r\n    }); \r\n\r\n  if(response !== null)\r\n  {\r\n    return (\r\n      <div class=\"admin-user-details\">\r\n          <a>name:{response.name}</a>\r\n          <a>username:{response.username}</a>\r\n          <a>email:{response.email}</a>   \r\n          <a>active:{response.active.toString()}</a>\r\n      </div>\r\n    )\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <div class=\"admin-user-details\">\r\n          error\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default UserDetails","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Admin\\AdminOptions.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Admin\\AdminStatistics.js",["356","357","358"],"import useAxios from \"../../General/UseAxios\";\r\n\r\nconst AdminStatistics = () => {\r\n\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/statistic',\r\n        headers: \r\n        {\r\n            Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    }); \r\n\r\n    const statistics = () =>{\r\n        if(response !== null)\r\n        {\r\n            return(\r\n                <u>\r\n                {response.map(statistic => (\r\n                    <li>{statistic.name} :{statistic.data}</li>\r\n                ))}\r\n                </u>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <a>error loading in</a>\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"admin-statistics-container\">\r\n            <div className=\"admin-statistics-box\">\r\n                <div className=\"admin-statistics-users\">\r\n                    {statistics()}\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminStatistics","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostContainer.js",["359","360","361","362","363","364"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport PostList from './PostList';\r\nimport \"./../../../css/General/home.css\"\r\nimport useAxios from '../UseAxios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\nconst PostContainer = (props) => {\r\n\r\n\r\n\r\n  const postContent = () =>{\r\n\r\n    if(props.response === null && props.error === null && props.loading ===false)\r\n    {\r\n    }\r\n\r\n    if(props.error != null)\r\n    {\r\n      return(\r\n        <div className=\"center\">\r\n            <a>Error loading posts</a>\r\n        </div>\r\n      )\r\n    }\r\n    else if(props.loading)\r\n    {\r\n      return(\r\n        <div className=\"center\">\r\n            <a>Loading posts</a>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    else if(props.response !== null)\r\n    {\r\n      if(props.response.length === 0)\r\n      {\r\n        return(\r\n          <div className=\"center\">\r\n              <a>No posts found</a>\r\n          </div>\r\n        )\r\n      }\r\n      else\r\n      {\r\n        return(\r\n          <PostList\r\n            posts={props.response}\r\n          />\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div className=\"home\">\r\n    <div className=\"posts\">\r\n      {postContent()}\r\n    </div>\r\n    <div className=\"information\">\r\n\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default PostContainer;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Speltakken\\SpeltakContainer.js",["365"],"import React from \"react\"\r\nimport useAxios from \"../UseAxios\";\r\nimport { Route, Switch, match } from 'react-router';\r\nimport Speltak from \"./Speltak\";\r\nimport PostContainer from \"../Home/PostContainer\";\r\n\r\nconst SpeltakContainer = (props) => {\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/post/getall/null',\r\n    }); \r\n\r\n    return (\r\n        <div className=\"speltak-container\">\r\n          <div className=\"speltak-inner-container\">\r\n            <Switch>\r\n                <Route path = {props.url + \"/*\"}>\r\n                    <Speltak/>\r\n                </Route>\r\n                <Route exact path = {props.url}>\r\n                    <PostContainer\r\n                    response={response}\r\n                    error={error}\r\n                    loading={loading}\r\n                    />\r\n                </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      )\r\n \r\n}\r\nexport default SpeltakContainer","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Speltakken\\Speltak.js",["366","367","368","369","370"],"import React from \"react\"\r\nimport { useState,useEffect } from \"react/cjs/react.development\";\r\nimport PostContainer from \"../Home/PostContainer\";\r\nimport useAxios from \"../UseAxios\";\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Speltak = () => {\r\n    const [name,setName] = useState(window.location.pathname.replace(\"/speltak/\",\"\"))\r\n    const history = useHistory()\r\n    const [oldPath, setOldPath] = useState(window.location.pathname)\r\n\r\n    const {hasRun} = 0\r\n    const [counter, setCounter] = useState(0)\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchData({\r\n            method: 'get',\r\n            url: ('/post/group/'+name),\r\n        });\r\n        }, \r\n    []);\r\n\r\n    const getName = path =>{\r\n        return path.replace(\"/speltak/\",\"\")\r\n    }\r\n\r\n    async function fetchData(params)\r\n    {\r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.request(params);\r\n            setResponse(res.data);\r\n            setError(null);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    history.listen((location) => { \r\n        setCounter(counter+1)\r\n        if(counter === 2 && hasRun === 0)\r\n        {\r\n            hasRun = 1\r\n            setCounter(1)\r\n            window.location.reload(false)\r\n        }\r\n        else\r\n        {\r\n            setName(getName(window.location.pathname))\r\n            fetchData({\r\n                method: 'get',\r\n                url: ('/post/group/'+name),\r\n            });\r\n        }\r\n        \r\n    }) \r\n\r\n\r\n    \r\n\r\n    return(\r\n    <PostContainer\r\n        response={response}\r\n        error={error}\r\n        loading={loading}\r\n    />    \r\n    )\r\n\r\n \r\n}\r\nexport default Speltak",{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":52,"column":16,"nodeType":"377","messageId":"378","endLine":52,"endColumn":22},{"ruleId":"379","severity":1,"message":"380","line":1,"column":8,"nodeType":"377","messageId":"381","endLine":1,"endColumn":13},{"ruleId":"379","severity":1,"message":"382","line":2,"column":17,"nodeType":"377","messageId":"381","endLine":2,"endColumn":25},{"ruleId":"379","severity":1,"message":"383","line":2,"column":27,"nodeType":"377","messageId":"381","endLine":2,"endColumn":36},{"ruleId":"379","severity":1,"message":"380","line":1,"column":8,"nodeType":"377","messageId":"381","endLine":1,"endColumn":13},{"ruleId":"379","severity":1,"message":"382","line":2,"column":17,"nodeType":"377","messageId":"381","endLine":2,"endColumn":25},{"ruleId":"379","severity":1,"message":"383","line":2,"column":27,"nodeType":"377","messageId":"381","endLine":2,"endColumn":36},{"ruleId":"379","severity":1,"message":"384","line":9,"column":23,"nodeType":"377","messageId":"381","endLine":9,"endColumn":28},{"ruleId":"379","severity":1,"message":"385","line":9,"column":30,"nodeType":"377","messageId":"381","endLine":9,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":22,"column":11,"nodeType":"388","endLine":22,"endColumn":78},{"ruleId":"389","severity":1,"message":"390","line":23,"column":11,"nodeType":"388","endLine":23,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":24,"column":11,"nodeType":"388","endLine":24,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":25,"column":11,"nodeType":"388","endLine":25,"endColumn":14},{"ruleId":"371","replacedBy":"391"},{"ruleId":"373","replacedBy":"392"},{"ruleId":"389","severity":1,"message":"390","line":12,"column":7,"nodeType":"388","endLine":12,"endColumn":10},{"ruleId":"389","severity":1,"message":"390","line":20,"column":7,"nodeType":"388","endLine":20,"endColumn":10},{"ruleId":"379","severity":1,"message":"393","line":4,"column":9,"nodeType":"377","messageId":"381","endLine":4,"endColumn":15},{"ruleId":"389","severity":1,"message":"390","line":70,"column":17,"nodeType":"388","endLine":70,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":154,"column":13,"nodeType":"388","endLine":154,"endColumn":46},{"ruleId":"379","severity":1,"message":"394","line":17,"column":12,"nodeType":"377","messageId":"381","endLine":17,"endColumn":20},{"ruleId":"379","severity":1,"message":"395","line":17,"column":22,"nodeType":"377","messageId":"381","endLine":17,"endColumn":33},{"ruleId":"379","severity":1,"message":"396","line":13,"column":22,"nodeType":"377","messageId":"381","endLine":13,"endColumn":33},{"ruleId":"379","severity":1,"message":"384","line":15,"column":23,"nodeType":"377","messageId":"381","endLine":15,"endColumn":28},{"ruleId":"379","severity":1,"message":"385","line":15,"column":30,"nodeType":"377","messageId":"381","endLine":15,"endColumn":37},{"ruleId":"389","severity":1,"message":"390","line":168,"column":17,"nodeType":"388","endLine":168,"endColumn":20},{"ruleId":"379","severity":1,"message":"382","line":2,"column":18,"nodeType":"377","messageId":"381","endLine":2,"endColumn":26},{"ruleId":"389","severity":1,"message":"390","line":26,"column":57,"nodeType":"388","endLine":26,"endColumn":92},{"ruleId":"389","severity":1,"message":"390","line":28,"column":57,"nodeType":"388","endLine":28,"endColumn":92},{"ruleId":"389","severity":1,"message":"390","line":30,"column":57,"nodeType":"388","endLine":30,"endColumn":92},{"ruleId":"389","severity":1,"message":"390","line":39,"column":25,"nodeType":"388","endLine":39,"endColumn":63},{"ruleId":"397","severity":1,"message":"398","line":41,"column":6,"nodeType":"399","endLine":41,"endColumn":8,"suggestions":"400"},{"ruleId":"389","severity":1,"message":"390","line":34,"column":15,"nodeType":"388","endLine":34,"endColumn":18},{"ruleId":"389","severity":1,"message":"390","line":45,"column":15,"nodeType":"388","endLine":45,"endColumn":18},{"ruleId":"389","severity":1,"message":"390","line":55,"column":15,"nodeType":"388","endLine":55,"endColumn":18},{"ruleId":"389","severity":1,"message":"390","line":82,"column":57,"nodeType":"388","endLine":82,"endColumn":92},{"ruleId":"389","severity":1,"message":"390","line":86,"column":57,"nodeType":"388","endLine":86,"endColumn":92},{"ruleId":"389","severity":1,"message":"390","line":90,"column":57,"nodeType":"388","endLine":90,"endColumn":92},{"ruleId":"379","severity":1,"message":"383","line":1,"column":27,"nodeType":"377","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"389","severity":1,"message":"390","line":46,"column":17,"nodeType":"388","endLine":46,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":54,"column":17,"nodeType":"388","endLine":54,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":66,"column":25,"nodeType":"388","endLine":66,"endColumn":28},{"ruleId":"389","severity":1,"message":"390","line":82,"column":33,"nodeType":"388","endLine":82,"endColumn":66},{"ruleId":"389","severity":1,"message":"390","line":120,"column":17,"nodeType":"388","endLine":120,"endColumn":20},{"ruleId":"379","severity":1,"message":"383","line":1,"column":27,"nodeType":"377","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"389","severity":1,"message":"390","line":64,"column":21,"nodeType":"388","endLine":64,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":73,"column":21,"nodeType":"388","endLine":73,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":81,"column":21,"nodeType":"388","endLine":81,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":90,"column":21,"nodeType":"388","endLine":90,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":116,"column":17,"nodeType":"388","endLine":116,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":125,"column":17,"nodeType":"388","endLine":125,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":133,"column":17,"nodeType":"388","endLine":133,"endColumn":20},{"ruleId":"397","severity":1,"message":"401","line":41,"column":8,"nodeType":"399","endLine":41,"endColumn":10,"suggestions":"402"},{"ruleId":"389","severity":1,"message":"390","line":62,"column":17,"nodeType":"388","endLine":62,"endColumn":20},{"ruleId":"397","severity":1,"message":"403","line":21,"column":10,"nodeType":"399","endLine":21,"endColumn":12,"suggestions":"404"},{"ruleId":"389","severity":1,"message":"390","line":27,"column":17,"nodeType":"388","endLine":27,"endColumn":83},{"ruleId":"389","severity":1,"message":"390","line":31,"column":17,"nodeType":"388","endLine":31,"endColumn":124},{"ruleId":"389","severity":1,"message":"390","line":33,"column":21,"nodeType":"388","endLine":33,"endColumn":123},{"ruleId":"379","severity":1,"message":"393","line":2,"column":9,"nodeType":"377","messageId":"381","endLine":2,"endColumn":15},{"ruleId":"379","severity":1,"message":"405","line":11,"column":12,"nodeType":"377","messageId":"381","endLine":11,"endColumn":20},{"ruleId":"379","severity":1,"message":"385","line":13,"column":12,"nodeType":"377","messageId":"381","endLine":13,"endColumn":19},{"ruleId":"389","severity":1,"message":"390","line":125,"column":21,"nodeType":"388","endLine":125,"endColumn":51},{"ruleId":"389","severity":1,"message":"390","line":136,"column":21,"nodeType":"388","endLine":136,"endColumn":51},{"ruleId":"389","severity":1,"message":"390","line":147,"column":21,"nodeType":"388","endLine":147,"endColumn":51},{"ruleId":"389","severity":1,"message":"390","line":158,"column":21,"nodeType":"388","endLine":158,"endColumn":51},{"ruleId":"389","severity":1,"message":"390","line":169,"column":21,"nodeType":"388","endLine":169,"endColumn":51},{"ruleId":"379","severity":1,"message":"383","line":1,"column":27,"nodeType":"377","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"406","line":18,"column":9,"nodeType":"377","messageId":"381","endLine":18,"endColumn":22},{"ruleId":"389","severity":1,"message":"390","line":37,"column":13,"nodeType":"388","endLine":37,"endColumn":16},{"ruleId":"379","severity":1,"message":"407","line":8,"column":11,"nodeType":"377","messageId":"381","endLine":8,"endColumn":18},{"ruleId":"379","severity":1,"message":"408","line":17,"column":12,"nodeType":"377","messageId":"381","endLine":17,"endColumn":27},{"ruleId":"379","severity":1,"message":"409","line":18,"column":12,"nodeType":"377","messageId":"381","endLine":18,"endColumn":24},{"ruleId":"379","severity":1,"message":"410","line":19,"column":12,"nodeType":"377","messageId":"381","endLine":19,"endColumn":26},{"ruleId":"389","severity":1,"message":"390","line":64,"column":21,"nodeType":"388","endLine":64,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":73,"column":21,"nodeType":"388","endLine":73,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":81,"column":21,"nodeType":"388","endLine":81,"endColumn":24},{"ruleId":"411","severity":1,"message":"412","line":104,"column":21,"nodeType":"388","endLine":104,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":104,"column":21,"nodeType":"388","endLine":104,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":113,"column":21,"nodeType":"388","endLine":113,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":121,"column":21,"nodeType":"388","endLine":121,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":130,"column":21,"nodeType":"388","endLine":130,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":252,"column":21,"nodeType":"388","endLine":252,"endColumn":53},{"ruleId":"389","severity":1,"message":"390","line":261,"column":21,"nodeType":"388","endLine":261,"endColumn":53},{"ruleId":"389","severity":1,"message":"390","line":272,"column":21,"nodeType":"388","endLine":272,"endColumn":53},{"ruleId":"389","severity":1,"message":"390","line":283,"column":21,"nodeType":"388","endLine":283,"endColumn":53},{"ruleId":"379","severity":1,"message":"382","line":1,"column":16,"nodeType":"377","messageId":"381","endLine":1,"endColumn":24},{"ruleId":"379","severity":1,"message":"407","line":9,"column":11,"nodeType":"377","messageId":"381","endLine":9,"endColumn":18},{"ruleId":"379","severity":1,"message":"384","line":7,"column":23,"nodeType":"377","messageId":"381","endLine":7,"endColumn":28},{"ruleId":"379","severity":1,"message":"385","line":7,"column":30,"nodeType":"377","messageId":"381","endLine":7,"endColumn":37},{"ruleId":"389","severity":1,"message":"390","line":30,"column":13,"nodeType":"388","endLine":30,"endColumn":16},{"ruleId":"379","severity":1,"message":"383","line":4,"column":20,"nodeType":"377","messageId":"381","endLine":4,"endColumn":29},{"ruleId":"379","severity":1,"message":"405","line":11,"column":12,"nodeType":"377","messageId":"381","endLine":11,"endColumn":20},{"ruleId":"379","severity":1,"message":"384","line":12,"column":12,"nodeType":"377","messageId":"381","endLine":12,"endColumn":17},{"ruleId":"379","severity":1,"message":"385","line":13,"column":12,"nodeType":"377","messageId":"381","endLine":13,"endColumn":19},{"ruleId":"379","severity":1,"message":"413","line":49,"column":14,"nodeType":"377","messageId":"381","endLine":49,"endColumn":26},{"ruleId":"389","severity":1,"message":"390","line":75,"column":21,"nodeType":"388","endLine":75,"endColumn":58},{"ruleId":"379","severity":1,"message":"385","line":7,"column":12,"nodeType":"377","messageId":"381","endLine":7,"endColumn":19},{"ruleId":"389","severity":1,"message":"390","line":25,"column":20,"nodeType":"388","endLine":25,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":96,"column":21,"nodeType":"388","endLine":96,"endColumn":71},{"ruleId":"389","severity":1,"message":"390","line":106,"column":21,"nodeType":"388","endLine":106,"endColumn":59},{"ruleId":"379","severity":1,"message":"384","line":7,"column":21,"nodeType":"377","messageId":"381","endLine":7,"endColumn":26},{"ruleId":"379","severity":1,"message":"385","line":7,"column":28,"nodeType":"377","messageId":"381","endLine":7,"endColumn":35},{"ruleId":"379","severity":1,"message":"383","line":1,"column":27,"nodeType":"377","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"405","line":12,"column":12,"nodeType":"377","messageId":"381","endLine":12,"endColumn":20},{"ruleId":"379","severity":1,"message":"384","line":13,"column":12,"nodeType":"377","messageId":"381","endLine":13,"endColumn":17},{"ruleId":"379","severity":1,"message":"385","line":14,"column":12,"nodeType":"377","messageId":"381","endLine":14,"endColumn":19},{"ruleId":"379","severity":1,"message":"414","line":36,"column":11,"nodeType":"377","messageId":"381","endLine":36,"endColumn":15},{"ruleId":"389","severity":1,"message":"390","line":45,"column":17,"nodeType":"388","endLine":45,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":50,"column":17,"nodeType":"388","endLine":50,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":101,"column":21,"nodeType":"388","endLine":101,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":104,"column":21,"nodeType":"388","endLine":104,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":105,"column":21,"nodeType":"388","endLine":105,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":106,"column":21,"nodeType":"388","endLine":106,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":109,"column":21,"nodeType":"388","endLine":109,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":118,"column":21,"nodeType":"388","endLine":118,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":129,"column":21,"nodeType":"388","endLine":129,"endColumn":24},{"ruleId":"379","severity":1,"message":"384","line":7,"column":21,"nodeType":"377","messageId":"381","endLine":7,"endColumn":26},{"ruleId":"379","severity":1,"message":"385","line":7,"column":28,"nodeType":"377","messageId":"381","endLine":7,"endColumn":35},{"ruleId":"379","severity":1,"message":"385","line":7,"column":12,"nodeType":"377","messageId":"381","endLine":7,"endColumn":19},{"ruleId":"379","severity":1,"message":"415","line":10,"column":12,"nodeType":"377","messageId":"381","endLine":10,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":30,"column":20,"nodeType":"388","endLine":30,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":141,"column":21,"nodeType":"388","endLine":141,"endColumn":58},{"ruleId":"389","severity":1,"message":"390","line":152,"column":21,"nodeType":"388","endLine":152,"endColumn":58},{"ruleId":"389","severity":1,"message":"390","line":163,"column":21,"nodeType":"388","endLine":163,"endColumn":58},{"ruleId":"389","severity":1,"message":"390","line":174,"column":21,"nodeType":"388","endLine":174,"endColumn":58},{"ruleId":"389","severity":1,"message":"390","line":188,"column":21,"nodeType":"388","endLine":188,"endColumn":58},{"ruleId":"379","severity":1,"message":"383","line":1,"column":27,"nodeType":"377","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"405","line":13,"column":12,"nodeType":"377","messageId":"381","endLine":13,"endColumn":20},{"ruleId":"379","severity":1,"message":"384","line":14,"column":12,"nodeType":"377","messageId":"381","endLine":14,"endColumn":17},{"ruleId":"379","severity":1,"message":"385","line":15,"column":12,"nodeType":"377","messageId":"381","endLine":15,"endColumn":19},{"ruleId":"379","severity":1,"message":"414","line":37,"column":11,"nodeType":"377","messageId":"381","endLine":37,"endColumn":15},{"ruleId":"389","severity":1,"message":"390","line":46,"column":17,"nodeType":"388","endLine":46,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":51,"column":17,"nodeType":"388","endLine":51,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":69,"column":17,"nodeType":"388","endLine":69,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":74,"column":17,"nodeType":"388","endLine":74,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":153,"column":21,"nodeType":"388","endLine":153,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":156,"column":21,"nodeType":"388","endLine":156,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":157,"column":21,"nodeType":"388","endLine":157,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":158,"column":21,"nodeType":"388","endLine":158,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":159,"column":21,"nodeType":"388","endLine":159,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":160,"column":21,"nodeType":"388","endLine":160,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":161,"column":21,"nodeType":"388","endLine":161,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":164,"column":21,"nodeType":"388","endLine":164,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":172,"column":21,"nodeType":"388","endLine":172,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":180,"column":21,"nodeType":"388","endLine":180,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":188,"column":21,"nodeType":"388","endLine":188,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":201,"column":21,"nodeType":"388","endLine":201,"endColumn":24},{"ruleId":"379","severity":1,"message":"384","line":9,"column":23,"nodeType":"377","messageId":"381","endLine":9,"endColumn":28},{"ruleId":"379","severity":1,"message":"385","line":9,"column":30,"nodeType":"377","messageId":"381","endLine":9,"endColumn":37},{"ruleId":"389","severity":1,"message":"390","line":22,"column":11,"nodeType":"388","endLine":22,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":23,"column":11,"nodeType":"388","endLine":23,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":24,"column":11,"nodeType":"388","endLine":24,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":25,"column":11,"nodeType":"388","endLine":25,"endColumn":14},{"ruleId":"379","severity":1,"message":"384","line":5,"column":23,"nodeType":"377","messageId":"381","endLine":5,"endColumn":28},{"ruleId":"379","severity":1,"message":"385","line":5,"column":30,"nodeType":"377","messageId":"381","endLine":5,"endColumn":37},{"ruleId":"389","severity":1,"message":"390","line":27,"column":17,"nodeType":"388","endLine":27,"endColumn":20},{"ruleId":"379","severity":1,"message":"382","line":1,"column":17,"nodeType":"377","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"379","severity":1,"message":"383","line":1,"column":27,"nodeType":"377","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"416","line":5,"column":8,"nodeType":"377","messageId":"381","endLine":5,"endColumn":16},{"ruleId":"389","severity":1,"message":"390","line":23,"column":13,"nodeType":"388","endLine":23,"endColumn":16},{"ruleId":"389","severity":1,"message":"390","line":31,"column":13,"nodeType":"388","endLine":31,"endColumn":16},{"ruleId":"389","severity":1,"message":"390","line":42,"column":15,"nodeType":"388","endLine":42,"endColumn":18},{"ruleId":"379","severity":1,"message":"417","line":3,"column":25,"nodeType":"377","messageId":"381","endLine":3,"endColumn":30},{"ruleId":"379","severity":1,"message":"416","line":4,"column":8,"nodeType":"377","messageId":"381","endLine":4,"endColumn":16},{"ruleId":"379","severity":1,"message":"418","line":11,"column":12,"nodeType":"377","messageId":"381","endLine":11,"endColumn":19},{"ruleId":"379","severity":1,"message":"419","line":11,"column":21,"nodeType":"377","messageId":"381","endLine":11,"endColumn":31},{"ruleId":"397","severity":1,"message":"420","line":26,"column":5,"nodeType":"399","endLine":26,"endColumn":7,"suggestions":"421"},{"ruleId":"422","severity":1,"message":"423","line":50,"column":13,"nodeType":"377","messageId":"424","endLine":50,"endColumn":19},"no-native-reassign",["425"],"no-negated-in-lhs",["426"],"no-self-assign","'filter' is assigned to itself.","Identifier","selfAssignment","no-unused-vars","'axios' is defined but never used.","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["425"],["426"],"'Router' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'setUserName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.","ArrayExpression",["427"],"React Hook useEffect has a missing dependency: 'props.conversationId'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'props.item.id'. Either include it or remove the dependency array.",["429"],"'response' is assigned a value but never used.","'noConnections' is assigned a value but never used.","'history' is assigned a value but never used.","'pictureResponse' is assigned a value but never used.","'pictureError' is assigned a value but never used.","'pictureLoading' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'toggleActive' is defined but never used.","'save' is assigned a value but never used.","'usernameError' is assigned a value but never used.","'useAxios' is defined but never used.","'match' is defined but never used.","'oldPath' is assigned a value but never used.","'setOldPath' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["430"],"no-const-assign","'hasRun' is constant.","const","no-global-assign","no-unsafe-negation",{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},"Update the dependencies array to be: [params]",{"range":"439","text":"440"},"Update the dependencies array to be: [props.conversationId]",{"range":"441","text":"442"},"Update the dependencies array to be: [props.item.id]",{"range":"443","text":"444"},"Update the dependencies array to be: [name]",{"range":"445","text":"446"},[914,916],"[params]",[1348,1350],"[props.conversationId]",[590,592],"[props.item.id]",[848,850],"[name]"]