[{"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\index.js":"1","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\reportWebVitals.js":"2","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\App.js":"3","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserContainer.js":"4","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserList.js":"5","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupContainer.js":"6","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupList.js":"7","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupDetails.js":"8","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupItem.js":"9","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\AdminContainer.js":"10","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupSearchBar.js":"11","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\PageNotFound.js":"12","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\User\\Login.js":"13","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Container.js":"14","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Searchbar.js":"15","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Navbar.js":"16","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\trash\\SideNavbar.js":"17","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\Home.js":"18","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostList.js":"19","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostItem.js":"20","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\UseAxios.js":"21","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Contact.js":"22","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostDetails.js":"23","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\Chat.js":"24","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatOptions.js":"25","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatMessages.js":"26"},{"size":540,"mtime":1634118647833,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":2072,"mtime":1639141102381,"results":"30","hashOfConfig":"28"},{"size":442,"mtime":1637839396441,"results":"31","hashOfConfig":"28"},{"size":434,"mtime":1634118647735,"results":"32","hashOfConfig":"28"},{"size":2229,"mtime":1638447767324,"results":"33","hashOfConfig":"28"},{"size":362,"mtime":1635926686316,"results":"34","hashOfConfig":"28"},{"size":327,"mtime":1635926686299,"results":"35","hashOfConfig":"28"},{"size":620,"mtime":1635926686307,"results":"36","hashOfConfig":"28"},{"size":1225,"mtime":1638447792365,"results":"37","hashOfConfig":"28"},{"size":435,"mtime":1637839396428,"results":"38","hashOfConfig":"28"},{"size":402,"mtime":1637839396502,"results":"39","hashOfConfig":"28"},{"size":6035,"mtime":1639354157668,"results":"40","hashOfConfig":"28"},{"size":1292,"mtime":1639354157656,"results":"41","hashOfConfig":"28"},{"size":728,"mtime":1638951834290,"results":"42","hashOfConfig":"28"},{"size":6791,"mtime":1638951834284,"results":"43","hashOfConfig":"28"},{"size":2997,"mtime":1638392287345,"results":"44","hashOfConfig":"45"},{"size":1305,"mtime":1638881652521,"results":"46","hashOfConfig":"28"},{"size":306,"mtime":1638711473543,"results":"47","hashOfConfig":"28"},{"size":2352,"mtime":1638951834276,"results":"48","hashOfConfig":"28"},{"size":992,"mtime":1638711473559,"results":"49","hashOfConfig":"28"},{"size":14,"mtime":1639255906755,"results":"50","hashOfConfig":"45"},{"size":289,"mtime":1638866942761,"results":"51","hashOfConfig":"28"},{"size":4234,"mtime":1639354157608,"results":"52","hashOfConfig":"28"},{"size":4490,"mtime":1639354157623,"results":"53","hashOfConfig":"28"},{"size":4660,"mtime":1639354157613,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mo9p09",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"e0q5fz",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\index.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\reportWebVitals.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\App.js",["123"],"import Login from './User/Login.js';\r\nimport Navbar from './Nav/Navbar.js'\r\nimport Container from './Container';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport React, { useState, useEffect} from 'react';\r\nimport \"./../../css/general.css\"\r\nimport axios from 'axios';\r\n\r\n//https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\nconst App = ()=> {\r\n    //const[isShowed,setShow] = useState(true)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async (params) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.request(params);\r\n      setResponse(res.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n \r\n  const toggleLogin = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData({\r\n      method: 'get',\r\n      url: ('/post/getall/null'),\r\n    });\r\n  }, []);\r\n\r\n const filter=(filter)=>{\r\n   if(filter.trim() === \"\")\r\n   {\r\n    filter = \"null\"\r\n   }\r\n   else if(filter !== null)\r\n   {\r\n      filter = filter\r\n   }\r\n   else{\r\n      filter = \"null\"\r\n   }\r\n\r\n\r\n   fetchData({\r\n    method: 'get',\r\n    url: ('/post/getall/'+ filter),\r\n  });\r\n}\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {isOpen && \r\n        <Login\r\n          handleClose={toggleLogin}\r\n        />\r\n      }\r\n      <Router>\r\n        <Navbar\r\n          toggleLogin={toggleLogin}\r\n          filter={filter}\r\n        />\r\n        <Container \r\n          response={response}\r\n          error={error}\r\n          loading={loading}\r\n        />\r\n        {/* <div className=\"body\">\r\n          {sideNavbar()}\r\n          <div className=\"body_child\" className=\"body_child_main\">\r\n            <ContentContainer/>\r\n          </div>         \r\n        </div> */}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserContainer.js",["124","125","126","127","128"],"import React, { useState, useEffect } from \"react\"\r\nimport UserList from \"./UserList\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst UserContainer = () => {\r\n // const [groups, setGroups]\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"inner\">\r\n       {/*} <UserList\r\n        //  groups={groups}\r\n  />*/}\r\n  <a>here will be all the users displayed</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserContainer","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\User\\UserList.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupContainer.js",["129","130","131","132","133"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\"\r\nimport GroupList from \"./GroupList\"\r\nimport GroupSearchBar from \"./GroupSearchBar\"\r\nimport GroupDetails from \"./GroupDetails\";\r\nimport PageNotFound from \"../../General/PageNotFound\";\r\n\r\n\r\n\r\nconst GroupContainer = (props) => { \r\n    const baseURL = process.env.REACT_APP_GROUP;\r\n\r\n    const [groups,setGroup] = useState(null);\r\n    const [group,setGroupId] = useState(null);\r\n\r\n    useEffect(() => \r\n    {\r\n      console.log(baseURL)\r\n      setGroups(baseURL);\r\n    }, []);\r\n\r\n    const setGroups = url =>\r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n          setGroup(response.data);\r\n        }).catch(error => console.log(error));\r\n\r\n      \r\n    }\r\n\r\n    const useFilter = filter =>\r\n    {\r\n      if(filter.trim() != \"\")\r\n      {\r\n        setGroups(baseURL +\"?filter=\"+ filter);\r\n        console.log(filter);\r\n      }\r\n      else\r\n      {\r\n          setGroups(baseURL)\r\n      }\r\n    }\r\n\r\n    const getGroupDetails = (id) =>\r\n    {\r\n      axios.get(baseURL+\"/\"+id).then((response) => \r\n      {\r\n        setGroupId(response.data);\r\n      });\r\n    }\r\n    \r\n    //safe guard?? will be done like this but better in the furte\r\n    if (groups == null) {\r\n      \r\n      return (\r\n        <div className=\"main\">{props.noConnection()}</div>\r\n        \r\n      )\r\n    };\r\n\r\n    return (\r\n    <div className=\"group_container\">\r\n      <div className=\"group_info_bar\">\r\n        <div className=\"group_info\">\r\n          <div className=\"group_name\">\r\n            <h1>group editor</h1>\r\n          </div>\r\n          \r\n          <div className=\"group_description\">\r\n            <a>Here you can see, edit and create groups. Click a group to get the details.</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"group_button\">\r\n          <div className=\"group_create_button\">\r\n              <a>create group</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n      <GroupSearchBar useFilter={useFilter}/>\r\n      <GroupList\r\n          groups={groups}\r\n          getGroupDetails={getGroupDetails}\r\n      />\r\n      \r\n      <GroupDetails \r\n          group = {group}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GroupContainer","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupList.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupDetails.js",["134"],"import React from \"react\"\r\nimport GroupItem from \"./GroupItem\"\r\n\r\nconst GroupDetails = props => {\r\n\r\n  if(props.group == null)\r\n  {\r\n    return null\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <div class=\"details\">\r\n          <h1> {props.group.id}</h1>\r\n          test\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\nexport default GroupDetails","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupItem.js",["135","136","137"],"import React from 'react';\r\n\r\n\r\n  \r\nconst GroupItem = props => {\r\n\r\n    return(\r\n        <div className='item' onClick={() => props.getGroupDetails(props.group.id)}>\r\n            <div className=\"groupPictureDiv\">\r\n                <img src={props.group.pictureUrl} className=\"groupPicture\" />\r\n            </div>\r\n            <div className=\"groupItemsDiv\">\r\n                <b>{props.group.name}</b><br />\r\n                <a>category: {props.group.category}</a><br />\r\n                <a>is active: {props.group.active.toString()}</a>\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n\r\n\r\nexport default GroupItem;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\AdminContainer.js",["138","139","140","141"],"import React, { useState, useEffect } from \"react\"\r\nimport { Route, Switch, match } from 'react-router';\r\nimport GroupContainer from './Group/GroupContainer';\r\nimport UserContainer from './User/UserContainer'\r\nimport PageNotFound from \"../General/PageNotFound\";\r\nimport './../../css/Admin/admin.css'\r\n\r\nconst AdminContainer = props => {\r\n\r\n  const noConnections = () =>{\r\n      return(\r\n        <PageNotFound\r\n            code={500}\r\n            message={\"no server connection\"}\r\n          />\r\n      )\r\n  }\r\n\r\n  const {url} = props;\r\n\r\n  return (\r\n    <div className=\"admin_container\">\r\n      <div className=\"admin_inner_container\">\r\n        <Switch>\r\n          <Route path = {url + \"/users\"}>\r\n            <UserContainer\r\n              noConnection={noConnections}\r\n            />\r\n            </Route>\r\n          <Route path = {url +\"/groups\"}>\r\n            <GroupContainer\r\n                noConnection={noConnections}\r\n              />\r\n          </Route>\r\n          <Route path = {url +\"/\"}>\r\n            <a>this is the admin section. here will be buttons displayed to navigate to your desired subsection</a>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminContainer\r\n\r\n\r\n","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\Admin\\Group\\GroupSearchBar.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\PageNotFound.js",["142","143"],"import './../../css/pageNotFound.css'\r\n\r\n\r\nfunction pageNotFound(props) {\r\n\r\n  \r\n  if(props.code != null)\r\n  {\r\n    return(\r\n      <div className=\"main\">\r\n      <h1>error {props.code}</h1>\r\n      <a>{props.message}</a>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>error 404</h1>\r\n      <a>page doesn't exsists yet</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default pageNotFound;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\User\\Login.js",["144","145"],"import React, { useState} from 'react';\r\nimport axios from 'axios';\r\nimport './../../../css/General/login.css'\r\n// import { Redirect } from 'react-router';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\nconst Login = props => \r\n{\r\n    const [userCredentials,setCredentials] = useState({\r\n        email :\"\",\r\n        password : \"\"\r\n    });\r\n\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // const [count, setCount] = useState(3);\r\n\r\n    const errorStyle = {\r\n        color:\"red\"\r\n    } \r\n\r\n    const fetchData = async (params) => {\r\n        setLoading(true);\r\n        try {\r\n        const res = await axios.post(\"/login\",params);\r\n        setResponse(res.data);\r\n        setError(null);\r\n        } catch (err) {\r\n        setError(err);\r\n        } finally {\r\n            \r\n        setLoading(false);\r\n        }\r\n    };\r\n\r\n    \r\n    const axiosDataResponse = () =>{\r\n        if(response === null && error === null && loading ===false)\r\n        {\r\n            return (\r\n                <br/>\r\n                );\r\n        }\r\n        var feedback = \"\";\r\n        if(error !== null)\r\n        {\r\n            feedback = \"Log in failed\"\r\n        }\r\n        else if(loading)\r\n        {\r\n            feedback = \"Loading...\"\r\n        }\r\n        else if(response !== null)\r\n        {\r\n            // countdown();\r\n            feedback = \"log in successful. \"//\"closing in: \" + count\r\n            setUserData()\r\n        }\r\n\r\n        return(\r\n            <div className=\"feedback\">\r\n                <a>{feedback}</a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const setUserData = () =>{\r\n        console.log(response)\r\n        sessionStorage.setItem(\"token\",response.Authorization)\r\n        sessionStorage.setItem(\"name\",response.name)\r\n        sessionStorage.setItem(\"userId\",response.userId)\r\n        sessionStorage.setItem(\"role\",response.role)\r\n        sessionStorage.setItem(\"groups\",JSON.stringify(response.groups))\r\n        countdown();\r\n    }\r\n\r\n    function Login(event){\r\n        event.preventDefault();\r\n        // console.log(userCredentials.email + \" \"+\r\n        //     userCredentials.password)\r\n        if(userCredentials.password === \"\" && userCredentials.password === \"\")\r\n        {\r\n          setEmailError(\"*Enter your E-mail addres\")\r\n          setPasswordError(\"*Enter your Password\")\r\n        }\r\n        else if(userCredentials.email === \"\")\r\n        {\r\n            setEmailError(\"*Enter your E-mail addres\")\r\n        }\r\n        else if(userCredentials.password === \"\")\r\n        {\r\n            setPasswordError(\"*Enter your Password\")\r\n        }\r\n        \r\n        else{\r\n            var params = {\r\n                email:userCredentials.email,\r\n                password:userCredentials.password,\r\n            }\r\n    \r\n            fetchData(params);\r\n        }\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n\r\n    async function countdown(){\r\n        // for (let i = 3; i > 0; i--) {\r\n        //     setCount(i)\r\n        //     await sleep(3000);\r\n        //     console.log(\"test\")\r\n        // }\r\n        // props.handleClose()\r\n        await sleep(500);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const Register = (event) =>{\r\n        event.preventDefault();\r\n        console.log(userCredentials.email + userCredentials.password)\r\n    }\r\n\r\n    const onChange = e => {\r\n        setCredentials({\r\n          ...userCredentials,\r\n          [e.target.name]: e.target.value,\r\n        })\r\n      }\r\n\r\n    const empty = e =>{\r\n        e.stopPropagation();\r\n    }\r\n\r\n  return (\r\n    <div className=\"popup-login\" onClick={props.handleClose}>\r\n      <div className=\"box\" onClick={empty}>\r\n        <div className=\"close-icon\" onClick={props.handleClose}>x</div>\r\n        <div className=\"top\">\r\n            <h1 className=\"Login-h1\">Log in</h1>\r\n            <a className=\"Login-information\">Log in using your email or register by clicking the register button</a><br/>\r\n        </div>\r\n        <div className=\"forms\">\r\n            <form onSubmit={Login} className=\"login-form\">\r\n                    <label htmlFor=\"email\" className=\"login-label\">E-mail address:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"email\" \r\n                        className=\"login-text\" \r\n                        value={userCredentials.email}\r\n                        name=\"email\" \r\n                        placeholder=\"E-mail..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <p className=\"error-login\">{emailError}</p><br/>\r\n                    <label htmlFor=\"password\" className=\"login-label\">Password:</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        id=\"password\" \r\n                        className=\"login-text\" \r\n                        value={userCredentials.password}\r\n                        name=\"password\" \r\n                        placeholder=\"Password..\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <p className=\"error-login\">{passwordError}</p>\r\n                    <div className=\"axios-response\" style={error !=null ? errorStyle : null}>\r\n                        {axiosDataResponse()}\r\n                    </div>\r\n                    \r\n                <div className=\"submit\">\r\n                    <input type=\"submit\"className=\"login-submit\" value=\"Login\"/>\r\n                </div>\r\n            </form> \r\n            <form onSubmit={Register} className=\"register-form\">\r\n                <div className=\"submit\">\r\n                    <input type=\"submit\" className=\"register-submit\"  value=\"Register\"/>\r\n                </div>\r\n            </form> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default Login;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Container.js",["146","147"],"import React, {useState} from \"react\"\r\nimport { Route, Switch } from 'react-router';\r\nimport Home from './Home/Home';\r\nimport Error404 from './PageNotFound';\r\nimport AdminContainer from \"../Admin/AdminContainer\";\r\nimport Login from \"./User/Login\";\r\nimport PostDetails from \"./../General/Home/PostDetails\";\r\nimport Contact from \"./Contact/Chat/Chat\";\r\nimport \"./../../css/container.css\"\r\n\r\nconst Container = (props) => {\r\n\r\n    const [userData, setUserData] = useState(null);///////////////////////NEEDS TO BE DONE\r\n\r\n  return (\r\n    <div className=\"content_container\">\r\n        <Switch>\r\n          <Route path = \"/admin*\">\r\n            <AdminContainer url=\"/admin\"/>\r\n          </Route>\r\n          <Route exact path = \"/posts-details/*\" component={PostDetails}/>\r\n          <Route exact path = \"/login\" component={Login}/>\r\n          <Route exact path = \"/account\" component={Login}/>\r\n          <Route exact path = \"/contact\" component={Contact}/>\r\n          <Route exact path = \"/\">\r\n              <Home\r\n                response={props.response}\r\n                error={props.error}\r\n                loading={props.loading}\r\n              />\r\n            </Route>\r\n          <Route exact path = \"/*\" component={Error404}/>\r\n        </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Searchbar.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Nav\\Navbar.js",["148","149","150","151","152","153","154","155"],"import React, {useState,useEffect} from 'react';\r\nimport './../../../css/General/navbar.css'\r\nimport logo from \"./../../../media/logo.png\"\r\nimport Searchbar from \"./Searchbar\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\"\r\nimport {RiArrowDropDownLine} from \"react-icons/ri\"\r\nimport accountIcon from \"./../../../media/account-icon.png\"\r\n\r\nconst Navbar = props => \r\n{\r\n    const [userName, setUserName] = useState(fetchUser());\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    function fetchUser(){\r\n        let username = sessionStorage.getItem(\"name\")\r\n        if(sessionStorage.getItem(\"token\") !== null && username !== null)\r\n        {\r\n            return username\r\n        }\r\n        return null\r\n        \r\n    }\r\n\r\n    async function logOut(){\r\n        sessionStorage.clear()\r\n        window.location.reload(false);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     fetchUser();\r\n    //   }, []);\r\n    \r\n\r\n    const shown = {\r\n        display:\"inline\"\r\n    }\r\n\r\n    const hidden = {\r\n        display:\"none\"\r\n    }\r\n\r\n    React.state = {\r\n        navItems:[\r\n          {\r\n            id: uuidv4(),\r\n            class:\"home\",\r\n            name:\"Home\",\r\n            route:\"/\",\r\n            isActive:false\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            class:\"home\",\r\n            name:\"Agenda\",\r\n            route:\"/agenda\",\r\n            isActive:false\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            class:\"speltakken\",\r\n            name:\"Groupbranches\",\r\n            route:\"/speltakken\",\r\n            isActive:false\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            class:\"fotoalbum\",\r\n            name:\"Picturebook\",\r\n            route:\"/fotoboek\",\r\n            isActive:false\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            class:\"contact\",\r\n            name:\"Contact\",\r\n            route:\"/contact\",\r\n            isActive:false\r\n          }\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"editor\",\r\n        //     name:\"editor\",\r\n        //     route:\"/editor\",\r\n        //     isActive:false\r\n        //   },\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"editor\",\r\n        //     name:\"my-posts\",\r\n        //     route:\"/myPosts\",\r\n        //     isActive:false\r\n        //   },\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"admin\",\r\n        //     name:\"admin\",\r\n        //     route:\"/admin\",\r\n        //     isActive:false\r\n        //   },\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"admin\",\r\n        //     name:\"users\",\r\n        //     route:\"/admin/users\",\r\n        //     isActive:false\r\n        //   },\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"admin\",\r\n        //     name:\"groups\",\r\n        //     route:\"/admin/groups\",\r\n        //     isActive:false\r\n        //   },\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"admin\",\r\n        //     name:\"pictures\",\r\n        //     route:\"/admin/pictures\",\r\n        //     isActive:false\r\n        //   },\r\n        //   {\r\n        //     id: uuidv4(),\r\n        //     class:\"admin\",\r\n        //     name:\"posts\",\r\n        //     route:\"/admin/posts\",\r\n        //     isActive:false\r\n        //   }\r\n        ]//this sucks\r\n      }\r\n    \r\n    const clicked = nav =>  {\r\n    nav.isActive = true\r\n    return nav.route\r\n    }\r\n\r\n\r\n    const dropIcon = () =>\r\n    {\r\n        return \"inline\"\r\n    }\r\n\r\n    const toggleDropIcon = () =>\r\n    {\r\n        setIsVisible(!isVisible)\r\n    }\r\n\r\n    function account(){\r\n        if(userName !== null)\r\n        {\r\n            return(\r\n                <div className=\"user-tabs\">\r\n                    <div className=\"individual-tab\" onClick={logOut}>\r\n                        <Link to=\"\" className=\"nav-link\"> <h2>Log out</h2> </Link>\r\n                    </div>\r\n                    <div className=\"individual-tab\">\r\n                        <Link to='/account' className=\"nav-link account-link\"> \r\n                            <div className=\"account-icon-center\">\r\n                                <img src={accountIcon} alt=\"account\" class=\"accountIcon\"/>\r\n                            </div>\r\n                            <h2>{userName}</h2> \r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else\r\n        {\r\n            \r\n            return(\r\n                <div className=\"individual-tab\">\r\n                    <h2 onClick={props.toggleLogin}>Log in/Register</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    //todo fix the slideshow\r\n    return (\r\n        <nav class=\"navbar\">\r\n            <div className=\"slideshow\">\r\n                <div className=\"overlay\">\r\n                    <div className=\"logo\">\r\n                        <Link to=\"\"><img src={logo} alt=\"logo\" class=\"logo\"/></Link>\r\n                    </div>\r\n                    <div className=\"tabs\">\r\n                        <div className=\"individual-tab\" >\r\n                            <Link to=\"\" className=\"nav-link\" ><h2>Home</h2></Link>\r\n                        </div>\r\n                        <div className=\"individual-tab\">\r\n                            <Link to=\"/member\" className=\"nav-link\" ><h2>Become a member</h2></Link>\r\n                        </div>\r\n                        {account()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navigation\">\r\n                <div className=\"navigation-list\">\r\n                    {React.state.navItems.map(nav =>(\r\n                        <div className =\"navigation-item\" >\r\n                            {/* {test(nav.class)}  find a way to store all the dropdown menu items*/}\r\n                            <Link to={clicked(nav)} className=\"remove-decoration navigation-link\" {...Link/* onMouseIn={toggleDropIcon} onMouseOut={toggleDropIcon} */} > \r\n                                <div className=\"inner-nav-div\">\r\n                                    <a className=\"nav-item-link\">{nav.name}</a>\r\n                                    {/*idk about this icon tho will see */}\r\n                                    {/* <RiArrowDropDownLine style={isVisible ? shown : hidden} size=\"35px\" className=\"drop-down-icon\"/> */}\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"navigation-searchbar\"></div>\r\n                <div className=\"inner-navigation-searchbar\">\r\n                    <Searchbar filter={props.filter}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\trash\\SideNavbar.js",["156"],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\Home.js",["157","158","159","160","161","162"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport PostList from './PostList';\r\nimport \"./../../../css/General/home.css\"\r\nimport useAxios from './../UseAxios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\nconst Home = (props) => {\r\n\r\n\r\n\r\n  const postContent = () =>{\r\n\r\n    if(props.response === null && props.error === null && props.loading ===false)\r\n    {\r\n    }\r\n\r\n    if(props.error != null)\r\n    {\r\n      return(\r\n        <div className=\"post-center\">\r\n            <a>Error loading posts</a>\r\n        </div>\r\n      )\r\n    }\r\n    else if(props.loading)\r\n    {\r\n      return(\r\n        <div className=\"post-center\">\r\n            <a>Loading posts</a>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    else if(props.response !== null)\r\n    {\r\n      if(props.response.length === 0)\r\n      {\r\n        return(\r\n          <div className=\"post-center\">\r\n              <a>No posts found</a>\r\n          </div>\r\n        )\r\n      }\r\n      else\r\n      {\r\n        return(\r\n          <PostList\r\n            posts={props.response}\r\n          />\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div className=\"home\">\r\n    <div className=\"posts\">\r\n      {postContent()}\r\n    </div>\r\n    <div className=\"information\">\r\n\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostList.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostItem.js",["163","164","165","166","167"],"import React from 'react';\r\nimport {FaUser} from \"react-icons/fa\"\r\nimport {BsCalendar3}from \"react-icons/bs\"\r\nimport {HiUserGroup} from \"react-icons/hi\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst PostItem = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    function postDetails(){\r\n        history.push(\"/posts-details/\"+props.post.postId); \r\n    }\r\n\r\n    return(\r\n        <div className='post-item' >\r\n            <div className=\"post-item-container\">\r\n                <div className=\"post-title-div\">\r\n                    <h1 className=\"post-title\">{props.post.title}</h1>\r\n                </div>\r\n                <div className=\"post-atributes\">\r\n                    {/*make it a div so it has a static place so the lenght doesnt matter */}\r\n                    <div className=\"post-user post-icon\"><FaUser color=\"green\" /></div>\r\n                    <div className=\"post-text\"><a className=\"post-atributes-item\">Published by: <b>{props.post.author}</b></a></div>\r\n                    <div className=\"post-calender post-icon\"><BsCalendar3 color=\"green\" /></div>\r\n                    <div className=\"post-text\"><a className=\"post-atributes-item\">Date: {props.post.datePublished}</a></div>\r\n                    <div className=\"post-calender post-icon\"><HiUserGroup color=\"green\" /></div>\r\n                    <div className=\"post-text\"><a className=\"post-atributes-item\">Group: {props.post.group}</a></div>\r\n                </div>\r\n                {/* the pcitures doesnt resize correctly like if I make the information tab bigger the picture get smaller ojeh and a button for read more*/}\r\n                <div className=\"post_content\">\r\n                    <div className=\"post-picture\">\r\n                        <img src={props.post.picture.url} alt={props.post.picture.name} className=\"post-image\" />\r\n                    </div>\r\n                    <div className=\"post-content-text\">\r\n                        <a>{props.post.content}</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* this is such a bad practice */}\r\n            <div className=\"post-readmore\" >\r\n                <div className=\"readmore-button\" onClick={postDetails}>\r\n                    <a>read more</a>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n\r\n\r\nexport default PostItem;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\UseAxios.js",["168"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"http://localhost:8080\";\r\n\r\n\r\n// const { response, error, loading } = UseAxios({\r\n//   method: 'POST',\r\n//   url: '/posts',\r\n//   headers: {\r\n//     accept: '*/*',\r\n//   },\r\n//   data: {\r\n//     userId: 7,\r\n//     id: 777,\r\n//     title: 'New Post',\r\n//     body: 'This is a new post',\r\n//   },\r\n// });\r\n\r\nconst useAxios = (params) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async (params) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.request(params);\r\n      setResponse(res.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(params);\r\n  }, []);\r\n\r\n  return { response, error, loading };\r\n};\r\n\r\nexport default useAxios;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Contact.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Home\\PostDetails.js",[],"C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\Chat.js",["169","170","171","172","173","174"],"import React, { useState, useEffect } from 'react';\r\nimport \"./chat.css\";\r\nimport useAxios from './../../UseAxios';\r\nimport {FaGreaterThan} from \"react-icons/fa\";\r\nimport ChatMessages from \"./ChatMessages\";\r\nimport ChatOptions from \"./ChatOptions\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Chat = () => \r\n{\r\n    const [currentChatId, setCurrentChatId]=useState(\"-1\"); \r\n    const [oldChatId, setOldChatId]=useState(\"-1\"); \r\n\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/conversation/'+ sessionStorage.getItem(\"userId\"),\r\n        headers: \r\n        {\r\n            Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n\r\n    if(sessionStorage.getItem(\"token\") === null)\r\n    {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n\r\n    async function resetChat(){\r\n        await sleep(500);\r\n        setOldChatId(currentChatId)\r\n    }\r\n\r\n    const chatsContainer = () =>{\r\n        if(error != null)\r\n        {\r\n            return(\r\n            <div className=\"center\">\r\n                <a>Error loading chat's</a>\r\n            </div>\r\n            )\r\n        }\r\n        else if(loading)\r\n        {\r\n            return(\r\n            <div className=\"center\">\r\n                <a>Loading chat's</a>\r\n            </div>\r\n            )\r\n        }\r\n        else if(response !== null)\r\n        {\r\n            if(response.length === 0)\r\n            {\r\n                return(\r\n                <div className=\"chats-box\">\r\n                    <div className='chat-group-box'>\r\n                        <h1>chats:</h1>\r\n                        <a>no chats found</a>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                <div className=\"chats-box\">\r\n                    <div className='chats-box-flex'>\r\n                        <div className='chats-title'>\r\n                            <h1>chats:</h1>\r\n                        </div>\r\n                        <div className='chats-chats'>\r\n                            {response.map((chats)=>(\r\n                            <div className='chats-chats-box' onClick={() => setCurrentChatId(chats.conversationId)}>\r\n                                <a className='chats-chats-title'>{chats.groupName}</a>\r\n                                <div class=\"chats-chats-icon\">\r\n                                    <FaGreaterThan />\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const messageContainer = () =>{\r\n        if(currentChatId === \"-1\" )\r\n        {\r\n            return(\r\n            <div className=\"messages-box\">\r\n                <div className='messages-title-response'>\r\n                    <h1>select a chat</h1>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else if(currentChatId === oldChatId )\r\n        {\r\n            return (\r\n                <ChatMessages\r\n                    conversationId ={currentChatId}\r\n                />\r\n            )\r\n        }\r\n        else if(currentChatId !== oldChatId)\r\n        {\r\n            resetChat()\r\n            return (\r\n            <div className=\"center\">\r\n                <a>Loading chat's</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-chat-container\">\r\n            <div className=\"contact-chat-box\">\r\n                <div className=\"options-container center\">\r\n                    {<ChatOptions/>}\r\n                </div>\r\n                <div class=\"vl\"></div>\r\n                <div className=\"chats-container\">\r\n                    {chatsContainer()}\r\n                </div>\r\n                <div class=\"vl\"></div>\r\n                <div className=\"messages-container center\">\r\n                    {messageContainer()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\nexport default Chat;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatOptions.js",["175","176","177","178","179","180","181","182"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport useAxios from './../../UseAxios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN;\r\n\r\n\r\nconst ChatOptions = () => \r\n{\r\n    //the groups the user can chose from to start\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/conversation',\r\n        headers: {\r\n        Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n\r\n    const [startChatId, setStartChatId]=useState(\"-1\"); \r\n\r\n    //creating the chat\r\n    const [createChatResponse, setCreateChatResponse] = useState(null);\r\n    const [createChatError, setCreateChatError] = useState(null);\r\n    const [createChatLoading, setCreateChatLoading] = useState(false);\r\n\r\n  \r\n    async function addChat(event){\r\n        event.preventDefault();\r\n\r\n        if(startChatId !== \"-1\")\r\n        {\r\n            const params = {\r\n                method: 'post',\r\n                url: '/conversation',\r\n                headers: \r\n                {\r\n                    Authorization: sessionStorage.getItem(\"token\"),\r\n                },\r\n                data: \r\n                {\r\n                    userId: sessionStorage.getItem(\"userId\"),\r\n                    groupId: startChatId,\r\n                },\r\n            }\r\n            \r\n            setCreateChatLoading(true);\r\n            try {\r\n                const res = await axios.request(params);\r\n                setCreateChatResponse(res.data);\r\n                setCreateChatError(null);\r\n            } catch (err) {\r\n                setCreateChatError(err);\r\n            } finally {\r\n                setCreateChatLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const addChatResponse = () =>{\r\n        if(createChatResponse === null && createChatError === null && createChatLoading ===false)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a> </a>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(createChatError != null)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>failed to add chat</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(createChatLoading)\r\n        {\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>prossesing chat</a>\r\n                </div>\r\n            )\r\n        }\r\n        else if(createChatResponse !== null)\r\n        { \r\n            resetWindow()\r\n            return(\r\n                <div className=\"options-form-response\">\r\n                    <a>chat added</a>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n\r\n    async function resetWindow(){\r\n        await sleep(500);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const handleGroupChange = (e) =>{\r\n        setStartChatId(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    if(response === null && error === null && loading ===false)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n                <a>Error loading chat options</a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(error != null)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n                <a>Error loading chat options</a>\r\n            </div>\r\n        )\r\n    }\r\n    else if(loading)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n                <a>Loading chat options</a>\r\n            </div>\r\n        )\r\n    }\r\n    else if(response !== null)\r\n    {\r\n        return(\r\n            <div className=\"options-box center\">\r\n                <form onSubmit={addChat} className='options-form'>\r\n                    <label for=\"groups\" className='options-form-label'>Chose a group to chat with:</label>\r\n                    <select name=\"groups\" value={startChatId} onChange={handleGroupChange} className='options-from-select'>\r\n                        <option value=\"-1\">select group:</option>\r\n                        {response.map((group) =>(\r\n                        <option value={group.id}>{group.name}</option>                 \r\n                        ))}\r\n                    </select>\r\n                    <input type=\"submit\" className='options-from-submit' value=\"start\"/>\r\n                    {addChatResponse()}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatOptions;","C:\\Users\\joepf\\Documents\\git\\Individual-project-gfb-website\\src\\components\\General\\Contact\\Chat\\ChatMessages.js",["183","184"],"import React, { useState, useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport useAxios from './../../UseAxios';\r\n\r\n\r\n\r\nconst ChatMessages = (props) =>{\r\n\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [messageText,setMessageText] = useState(\"\");\r\n    const [once,setOnce] = useState(false);\r\n\r\n    //recieved\r\n    const [messages, setRecievedMessages] = useState([]);\r\n    //the chat is loaded\r\n\r\n    const { response, error, loading } = useAxios({\r\n        method: 'get',\r\n        url: '/conversation/messages/'+props.conversationId,\r\n        headers: {\r\n        Authorization: sessionStorage.getItem(\"token\"),\r\n        },\r\n    });\r\n  \r\n    useEffect(() => {\r\n        // use SockJS as the websocket client\r\n        const socket = SockJS(process.env.REACT_APP_DOMAIN+\"/ws\");\r\n        // Set stomp to use websockets\r\n        const stompClient = Stomp.over(socket);\r\n        // connect to the backend\r\n        stompClient.connect({}, () => {\r\n            // subscribe to the backend\r\n            stompClient.subscribe('/topic/message/' + props.conversationId, (data) => {\r\n            //console.log(data);\r\n            onMessageReceived(data);\r\n            });\r\n        });\r\n        // maintain the client for sending and receiving\r\n        setStompClient(stompClient);\r\n    }, []);\r\n\r\n    // send the data using Stomp\r\n    function sendMessage(e) {\r\n        e.preventDefault()\r\n        if(/*user != null && */messageText !== \"\" && response !== null)\r\n        {\r\n            setMessageText(\"\")\r\n            stompClient.send(\"/app/create\",{},JSON.stringify({\r\n            'conversationId':props.conversationId,\r\n            'userId': sessionStorage.getItem(\"userId\"),\r\n            'message': messageText\r\n            }))\r\n        }\r\n    }\r\n\r\n    const loadMessages = () =>{\r\n        return(\r\n            messages.map((message)=>(\r\n            <div className='message-box'>\r\n                <b>{message.userName}: </b>\r\n                <a>{message.message}</a>\r\n            </div>\r\n            ))\r\n        )\r\n    }\r\n  \r\n    const onChange = e => {\r\n        setMessageText(e.target.value)\r\n    }\r\n        \r\n\r\n    const onMessageReceived = (data) =>{\r\n        setRecievedMessages(messages => [JSON.parse(data.body), ...messages])\r\n    }\r\n\r\n  //TODO, add a solution for disconnection\r\n    if(response === null && error === null && loading ===false)\r\n    {\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-title-response center'>\r\n                <h1>select a chat</h1>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if(error != null)\r\n    {\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-title-response center'>\r\n                <h1>error fetching chat</h1>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(loading)\r\n    {\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-title-response center'>\r\n                <h1>fetching the chat</h1>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(response !== null)\r\n    { \r\n        if(once === false)\r\n        {\r\n            setOnce(true)\r\n            setRecievedMessages(response.messages)\r\n        }\r\n        return(\r\n        <div className=\"messages-box\">\r\n            <div className='messages-box-flex'>\r\n                <div className=\"messages-up\">     {/*fix this shit the message is in the scroll box */}           \r\n                    <div className='messages-title'>\r\n                        <h1>messages:</h1>\r\n                    </div>\r\n                    <div className=\"messages-messages\">\r\n                        {loadMessages()}\r\n                    </div>\r\n                </div>\r\n                <div className='messages-down'>\r\n                    <form onSubmit={sendMessage} className=\"messages-form\" autocomplete=\"off\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"messages-form-text\" \r\n                            value={messageText}\r\n                            name=\"message\" \r\n                            placeholder=\"message..\"\r\n                            onChange={onChange}\r\n                        />         \r\n                        <div className=\"messages-form-submit-box\">\r\n                            <input type=\"submit\"className=\"messages-form-submit\" value=\"Send message\"/>\r\n                        </div>\r\n                    </form> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatMessages;",{"ruleId":"185","severity":1,"message":"186","line":52,"column":16,"nodeType":"187","messageId":"188","endLine":52,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"187","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"192","line":1,"column":27,"nodeType":"187","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"193","line":2,"column":8,"nodeType":"187","messageId":"191","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"194","line":3,"column":16,"nodeType":"187","messageId":"191","endLine":3,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":16,"column":3,"nodeType":"197","endLine":16,"endColumn":6},{"ruleId":"189","severity":1,"message":"198","line":6,"column":8,"nodeType":"187","messageId":"191","endLine":6,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":20,"column":8,"nodeType":"201","endLine":20,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":34,"column":24,"nodeType":"205","messageId":"206","endLine":34,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":71,"column":13,"nodeType":"197","endLine":71,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":76,"column":15,"nodeType":"197","endLine":76,"endColumn":18},{"ruleId":"189","severity":1,"message":"207","line":2,"column":8,"nodeType":"187","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":10,"column":17,"nodeType":"197","endLine":10,"endColumn":78},{"ruleId":"195","severity":1,"message":"196","line":14,"column":17,"nodeType":"197","endLine":14,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":15,"column":17,"nodeType":"197","endLine":15,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"187","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"192","line":1,"column":27,"nodeType":"187","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"210","line":2,"column":25,"nodeType":"187","messageId":"191","endLine":2,"endColumn":30},{"ruleId":"195","severity":1,"message":"196","line":36,"column":13,"nodeType":"197","endLine":36,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":12,"column":7,"nodeType":"197","endLine":12,"endColumn":10},{"ruleId":"195","severity":1,"message":"196","line":20,"column":7,"nodeType":"197","endLine":20,"endColumn":10},{"ruleId":"195","severity":1,"message":"196","line":68,"column":17,"nodeType":"197","endLine":68,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":148,"column":13,"nodeType":"197","endLine":148,"endColumn":46},{"ruleId":"189","severity":1,"message":"211","line":13,"column":12,"nodeType":"187","messageId":"191","endLine":13,"endColumn":20},{"ruleId":"189","severity":1,"message":"212","line":13,"column":22,"nodeType":"187","messageId":"191","endLine":13,"endColumn":33},{"ruleId":"189","severity":1,"message":"192","line":1,"column":25,"nodeType":"187","messageId":"191","endLine":1,"endColumn":34},{"ruleId":"189","severity":1,"message":"213","line":7,"column":9,"nodeType":"187","messageId":"191","endLine":7,"endColumn":28},{"ruleId":"189","severity":1,"message":"214","line":12,"column":22,"nodeType":"187","messageId":"191","endLine":12,"endColumn":33},{"ruleId":"189","severity":1,"message":"215","line":35,"column":11,"nodeType":"187","messageId":"191","endLine":35,"endColumn":16},{"ruleId":"189","severity":1,"message":"216","line":39,"column":11,"nodeType":"187","messageId":"191","endLine":39,"endColumn":17},{"ruleId":"189","severity":1,"message":"217","line":138,"column":11,"nodeType":"187","messageId":"191","endLine":138,"endColumn":19},{"ruleId":"189","severity":1,"message":"218","line":143,"column":11,"nodeType":"187","messageId":"191","endLine":143,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":207,"column":37,"nodeType":"197","endLine":207,"endColumn":66},{"ruleId":"189","severity":1,"message":"190","line":2,"column":18,"nodeType":"187","messageId":"191","endLine":2,"endColumn":26},{"ruleId":"189","severity":1,"message":"190","line":1,"column":17,"nodeType":"187","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"192","line":1,"column":27,"nodeType":"187","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"219","line":5,"column":8,"nodeType":"187","messageId":"191","endLine":5,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":23,"column":13,"nodeType":"197","endLine":23,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":31,"column":13,"nodeType":"197","endLine":31,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":42,"column":15,"nodeType":"197","endLine":42,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":25,"column":48,"nodeType":"197","endLine":25,"endColumn":83},{"ruleId":"195","severity":1,"message":"196","line":27,"column":48,"nodeType":"197","endLine":27,"endColumn":83},{"ruleId":"195","severity":1,"message":"196","line":29,"column":48,"nodeType":"197","endLine":29,"endColumn":83},{"ruleId":"195","severity":1,"message":"196","line":37,"column":25,"nodeType":"197","endLine":37,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":44,"column":21,"nodeType":"197","endLine":44,"endColumn":24},{"ruleId":"199","severity":1,"message":"220","line":41,"column":6,"nodeType":"201","endLine":41,"endColumn":8,"suggestions":"221"},{"ruleId":"189","severity":1,"message":"192","line":1,"column":27,"nodeType":"187","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":46,"column":17,"nodeType":"197","endLine":46,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":54,"column":17,"nodeType":"197","endLine":54,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":66,"column":25,"nodeType":"197","endLine":66,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":82,"column":33,"nodeType":"197","endLine":82,"endColumn":66},{"ruleId":"195","severity":1,"message":"196","line":120,"column":17,"nodeType":"197","endLine":120,"endColumn":20},{"ruleId":"189","severity":1,"message":"192","line":1,"column":27,"nodeType":"187","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":64,"column":21,"nodeType":"197","endLine":64,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":73,"column":21,"nodeType":"197","endLine":73,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":81,"column":21,"nodeType":"197","endLine":81,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":90,"column":21,"nodeType":"197","endLine":90,"endColumn":24},{"ruleId":"195","severity":1,"message":"196","line":116,"column":17,"nodeType":"197","endLine":116,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":125,"column":17,"nodeType":"197","endLine":125,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":133,"column":17,"nodeType":"197","endLine":133,"endColumn":20},{"ruleId":"199","severity":1,"message":"222","line":41,"column":8,"nodeType":"201","endLine":41,"endColumn":10,"suggestions":"223"},{"ruleId":"195","severity":1,"message":"196","line":62,"column":17,"nodeType":"197","endLine":62,"endColumn":20},"no-self-assign","'filter' is assigned to itself.","Identifier","selfAssignment","no-unused-vars","'useState' is defined but never used.","unusedVar","'useEffect' is defined but never used.","'UserList' is defined but never used.","'uuidv4' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PageNotFound' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'baseURL'. Either include it or remove the dependency array.","ArrayExpression",["224"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'GroupItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'match' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'RiArrowDropDownLine' is defined but never used.","'setUserName' is assigned a value but never used.","'shown' is assigned a value but never used.","'hidden' is assigned a value but never used.","'dropIcon' is assigned a value but never used.","'toggleDropIcon' is assigned a value but never used.","'useAxios' is defined but never used.","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'props.conversationId'. Either include it or remove the dependency array.",["226"],{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [baseURL]",{"range":"233","text":"234"},"Update the dependencies array to be: [params]",{"range":"235","text":"236"},"Update the dependencies array to be: [props.conversationId]",{"range":"237","text":"238"},[548,550],"[baseURL]",[914,916],"[params]",[1348,1350],"[props.conversationId]"]